2022-10-15 09:35:46.710 febs [main] INFO  cc.mrbird.febs.StoreApplication - Starting StoreApplication on WIN-ETS2DEK9JHC with PID 9188 (started by Administrator in E:\Project\超商成本核算管理系统\store_cost\backend)
2022-10-15 09:35:46.712 febs [main] INFO  cc.mrbird.febs.StoreApplication - No active profile set, falling back to default profiles: default
2022-10-15 09:35:50.568 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-10-15 09:35:50.571 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-10-15 09:35:50.633 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44ms. Found 0 repository interfaces.
2022-10-15 09:35:51.011 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$e08d55f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.138 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.263 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$badca19c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.276 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$514e30cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.307 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$bcce3274] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.736 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$b592e9c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.762 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.766 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.870 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.878 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$a2d58cda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.881 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.887 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$8f169d65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.896 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.898 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:51.900 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-10-15 09:35:51.910 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-10-15 09:35:52.171 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-10-15 09:35:52.172 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-10-15 09:35:52.172 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-10-15 09:35:52.172 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-10-15 09:35:52.172 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:52.184 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:52.193 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.284 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.291 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.318 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.329 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.331 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.387 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.405 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.435 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.439 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.442 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.469 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.538 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.576 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.600 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$ace1b05c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.608 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$5f2e7275] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.611 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$1a455864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.619 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.625 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.637 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$4110cf92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.647 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.649 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$8eed4deb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.661 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.662 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.667 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.669 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.691 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.703 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.709 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.709 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.716 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:53.730 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:35:54.187 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-10-15 09:35:54.201 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-10-15 09:35:54.206 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-10-15 09:35:54.207 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-10-15 09:35:54.213 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\办公软件\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-10-15 09:35:54.484 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-10-15 09:35:54.484 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7730 ms
2022-10-15 09:35:55.126 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-10-15 09:35:55.127 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-10-15 09:35:55.127 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-10-15 09:35:55.127 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-10-15 09:35:55.127 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-10-15 09:35:55.127 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-10-15 09:35:55.127 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-10-15 09:35:55.127 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-10-15 09:35:55.800 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-10-15 09:35:55.815 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-10-15 09:35:55.815 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-10-15 09:35:55.818 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-10-15 09:35:55.819 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-10-15 09:35:55.820 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1665797755802'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-10-15 09:35:55.820 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-10-15 09:35:55.820 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-10-15 09:35:55.822 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@50e6ee24
2022-10-15 09:35:55.907 febs [main] INFO  p6spy - 2022-10-15 09:35:55 | 耗时 33 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-10-15 09:35:56.766 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-10-15 09:35:58.203 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-10-15 09:35:58.264 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-10-15 09:35:58.369 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-10-15 09:35:58.380 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-10-15 09:35:58.395 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-10-15 09:35:58.397 febs [main] INFO  cc.mrbird.febs.StoreApplication - Started StoreApplication in 12.593 seconds (JVM running for 16.379)
2022-10-15 09:35:58.406 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-10-15 09:35:58.478 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 09:35:58.478 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-10-15 09:35:58.478 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-10-15 09:35:58.519 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 11 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-10-15 09:35:58.564 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 40 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:35:58.633 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 2 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-10-15 09:35:58.662 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 19 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-10-15 09:35:58.678 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-10-15 09:35:58.682 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:35:58.685 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-10-15 09:35:58.687 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-10-15 09:35:58.691 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-10-15 09:35:58.694 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:35:58.696 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-10-15 09:35:58.700 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-10-15 09:35:58.702 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-10-15 09:35:58.704 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'xiaoduan' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:35:58.710 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'xiaoduan';
2022-10-15 09:35:58.712 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'xiaoduan' and m.perms is not null and m.perms <> '';
2022-10-15 09:35:58.714 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-10-15 09:35:58.717 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:35:58.719 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test';
2022-10-15 09:35:58.722 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test' and m.perms is not null and m.perms <> '';
2022-10-15 09:35:58.725 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16' ;
2022-10-15 09:35:58.727 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'ddmtest14' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:35:58.732 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'ddmtest14';
2022-10-15 09:35:58.734 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'ddmtest14' and m.perms is not null and m.perms <> '';
2022-10-15 09:35:58.735 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='33' ;
2022-10-15 09:35:58.737 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:35:58.740 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test1';
2022-10-15 09:35:58.743 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test1' and m.perms is not null and m.perms <> '';
2022-10-15 09:35:58.745 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='34' ;
2022-10-15 09:35:58.747 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:35:58.750 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-10-15 09:35:58.752 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-10-15 09:35:58.759 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='35' ;
2022-10-15 09:35:58.762 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test33333' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:35:58.764 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test33333';
2022-10-15 09:35:58.767 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test33333' and m.perms is not null and m.perms <> '';
2022-10-15 09:35:58.768 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='36' ;
2022-10-15 09:35:58.771 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:35:58.774 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 2 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system';
2022-10-15 09:35:58.778 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'system' and m.perms is not null and m.perms <> '';
2022-10-15 09:35:58.780 febs [main] INFO  p6spy - 2022-10-15 09:35:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='37' ;
2022-10-15 09:35:58.781 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-10-15 09:35:58.781 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-10-15 09:35:58.781 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-10-15 09:35:58.781 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-10-15 09:35:58.781 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2022-10-15T09:35:58.781
2022-10-15 09:35:59.431 febs [RMI TCP Connection(4)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-10-15 09:35:59.431 febs [RMI TCP Connection(4)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-10-15 09:35:59.445 febs [RMI TCP Connection(4)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2022-10-15 09:35:59.463 febs [RMI TCP Connection(3)-192.168.1.5] INFO  p6spy - 2022-10-15 09:35:59 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-10-15 09:40:40.082 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-10-15 09:40:40.205 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 09:40:40 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-10-15T09:40:40.176+0800' WHERE username = 'system';
2022-10-15 09:40:40.207 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 09:40:40 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:40:40.261 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 09:40:40 | 耗时 10 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'system', '2022-10-15T09:40:40.220+0800', '', '127.0.0.1' );
2022-10-15 09:40:40.387 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 09:40:40.414 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 09:40:40 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system') order by m.order_num;
2022-10-15 09:40:40.732 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 09:40:40.808 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 09:40:40 | 耗时 72 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 09:40:40.809 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 09:40:40 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 09:40:40.811 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 09:40:40 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 09:40:40.813 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 09:40:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 09:40:40.817 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 09:40:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 09:40:45.397 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 09:40:45.479 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 09:40:45 | 耗时 21 ms | SQL 语句：
SELECT COUNT(1) FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1;
2022-10-15 09:40:45.485 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 09:40:45 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.task_date AS taskDate, ri.content, ri.status, ri.replenishment, ri.staff_code, si.staff_name AS staffName, si.avatar FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1 ORDER BY ri.task_date DESC LIMIT 0,10;
2022-10-15 09:41:16.767 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 09:41:16.770 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 09:41:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1;
2022-10-15 09:41:16.772 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 09:41:16 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.task_date AS taskDate, ri.content, ri.status, ri.replenishment, ri.staff_code, si.staff_name AS staffName, si.avatar FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1 ORDER BY ri.task_date DESC LIMIT 0,10;
2022-10-15 09:43:06.741 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 09:43:06.746 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 09:43:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1;
2022-10-15 09:43:06.747 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 09:43:06 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.task_date AS taskDate, ri.content, ri.status, ri.replenishment, ri.staff_code, si.staff_name AS staffName, si.avatar FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1 ORDER BY ri.task_date DESC LIMIT 0,10;
2022-10-15 09:50:55.141 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 09:50:55.160 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 09:50:55 | 耗时 10 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 and osr.code = 'undefined' ORDER BY si.create_date DESC;
2022-10-15 09:51:14.492 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 09:51:14.495 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 09:51:14 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 and osr.code = 'undefined' ORDER BY si.create_date DESC;
2022-10-15 09:59:12.107 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-10-15 09:59:12.115 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-10-15 09:59:12.115 febs [Thread-29] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-10-15 09:59:12.115 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665797755802 shutting down.
2022-10-15 09:59:12.115 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665797755802 paused.
2022-10-15 09:59:12.116 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665797755802 shutdown complete.
2022-10-15 09:59:12.119 febs [Thread-29] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-10-15 09:59:12.120 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-10-15 09:59:12.126 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-10-15 09:59:19.753 febs [main] INFO  cc.mrbird.febs.StoreApplication - Starting StoreApplication on WIN-ETS2DEK9JHC with PID 13884 (started by Administrator in E:\Project\超商成本核算管理系统\store_cost\backend)
2022-10-15 09:59:19.756 febs [main] INFO  cc.mrbird.febs.StoreApplication - No active profile set, falling back to default profiles: default
2022-10-15 09:59:20.843 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-10-15 09:59:20.845 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-10-15 09:59:20.907 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49ms. Found 0 repository interfaces.
2022-10-15 09:59:21.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$76d2a4a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:21.394 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:21.484 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5121f04d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:21.491 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:21.495 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:21.503 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e7937f7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:21.519 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$53138125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:21.963 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$4bd83879] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:21.982 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:21.986 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:22.076 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:22.083 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$391adb8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:22.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:22.093 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$255bec16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:22.102 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:22.104 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:22.106 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-10-15 09:59:22.114 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-10-15 09:59:22.322 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-10-15 09:59:22.322 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-10-15 09:59:22.322 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-10-15 09:59:22.322 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-10-15 09:59:22.322 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:22.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:22.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.073 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.080 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.082 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.114 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.115 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.123 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.124 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.125 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.164 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.185 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.213 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.214 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.216 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.238 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.240 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.270 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.270 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.295 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.325 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$4326ff0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$f573c126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$b08aa715] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.348 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$d7561e43] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.358 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$25329c9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.378 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.379 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.386 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.389 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.422 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.441 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.446 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.447 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.454 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:23.468 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 09:59:24.167 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-10-15 09:59:24.182 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-10-15 09:59:24.188 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-10-15 09:59:24.188 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-10-15 09:59:24.196 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\办公软件\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-10-15 09:59:24.379 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-10-15 09:59:24.379 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4540 ms
2022-10-15 09:59:25.017 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-10-15 09:59:25.017 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-10-15 09:59:25.017 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-10-15 09:59:25.018 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-10-15 09:59:25.018 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-10-15 09:59:25.018 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-10-15 09:59:25.018 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-10-15 09:59:25.018 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-10-15 09:59:25.534 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-10-15 09:59:25.546 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-10-15 09:59:25.546 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-10-15 09:59:25.550 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-10-15 09:59:25.552 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-10-15 09:59:25.552 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1665799165535'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-10-15 09:59:25.552 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-10-15 09:59:25.552 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-10-15 09:59:25.554 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@26b3fe8
2022-10-15 09:59:25.605 febs [main] INFO  p6spy - 2022-10-15 09:59:25 | 耗时 6 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-10-15 09:59:26.297 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-10-15 09:59:27.520 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-10-15 09:59:27.576 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-10-15 09:59:27.663 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-10-15 09:59:27.673 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-10-15 09:59:27.674 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 09:59:27.687 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-10-15 09:59:27.690 febs [main] INFO  cc.mrbird.febs.StoreApplication - Started StoreApplication in 8.397 seconds (JVM running for 9.704)
2022-10-15 09:59:27.700 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-10-15 09:59:27.701 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-10-15 09:59:27.701 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-10-15 09:59:27.754 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 22 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-10-15 09:59:27.762 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:59:27.830 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-10-15 09:59:27.844 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-10-15 09:59:27.853 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-10-15 09:59:27.856 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:59:27.859 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-10-15 09:59:27.861 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-10-15 09:59:27.863 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-10-15 09:59:27.865 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:59:27.868 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-10-15 09:59:27.870 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-10-15 09:59:27.871 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-10-15 09:59:27.873 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'xiaoduan' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:59:27.876 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'xiaoduan';
2022-10-15 09:59:27.878 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'xiaoduan' and m.perms is not null and m.perms <> '';
2022-10-15 09:59:27.879 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-10-15 09:59:27.881 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:59:27.884 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test';
2022-10-15 09:59:27.886 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test' and m.perms is not null and m.perms <> '';
2022-10-15 09:59:27.887 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16' ;
2022-10-15 09:59:27.889 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'ddmtest14' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:59:27.894 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'ddmtest14';
2022-10-15 09:59:27.896 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'ddmtest14' and m.perms is not null and m.perms <> '';
2022-10-15 09:59:27.897 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='33' ;
2022-10-15 09:59:27.899 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:59:27.902 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test1';
2022-10-15 09:59:27.903 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test1' and m.perms is not null and m.perms <> '';
2022-10-15 09:59:27.905 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='34' ;
2022-10-15 09:59:27.906 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:59:27.908 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-10-15 09:59:27.911 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-10-15 09:59:27.916 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='35' ;
2022-10-15 09:59:27.918 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test33333' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:59:27.920 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test33333';
2022-10-15 09:59:27.922 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test33333' and m.perms is not null and m.perms <> '';
2022-10-15 09:59:27.923 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='36' ;
2022-10-15 09:59:27.925 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 09:59:27.928 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system';
2022-10-15 09:59:27.930 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'system' and m.perms is not null and m.perms <> '';
2022-10-15 09:59:27.932 febs [main] INFO  p6spy - 2022-10-15 09:59:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='37' ;
2022-10-15 09:59:27.933 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-10-15 09:59:27.933 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-10-15 09:59:27.933 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-10-15 09:59:27.933 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-10-15 09:59:27.933 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2022-10-15T09:59:27.933
2022-10-15 09:59:28.356 febs [RMI TCP Connection(1)-192.168.1.5] INFO  p6spy - 2022-10-15 09:59:28 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-10-15 09:59:28.393 febs [RMI TCP Connection(3)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-10-15 09:59:28.393 febs [RMI TCP Connection(3)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-10-15 09:59:28.404 febs [RMI TCP Connection(3)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2022-10-15 10:00:12.854 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:00:12.854 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:00:12.913 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 10:00:12 | 耗时 15 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 10:00:12.973 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 10:00:12 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM storehouse_info si WHERE si.transaction_type = 0;
2022-10-15 10:00:12.977 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 10:00:12 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice, si.inbound_order_number AS inboundOrderNumber, si.delivery_order_number AS deliveryOrderNumber FROM storehouse_info si WHERE si.transaction_type = 0 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 10:00:14.910 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:00:14.929 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 10:00:14 | 耗时 11 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE transaction_type = 0 AND quantity < 50;
2022-10-15 10:00:15.054 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 10:00:15 | 耗时 21 ms | SQL 语句：
INSERT INTO replenishment_info ( task_date, content, status, replenishment ) VALUES ( '2022-10-15', '【金士顿内存条8g】库存余量不足，当前库存为 39根【华硕TUF GAMING B660M-PLUS WIFI D4】库存余量不足，当前库存为 44块【Intel 酷睿 i9 12900K】库存余量不足，当前库存为 49块', 0, '[{"unitPrice":300,"quantity":39,"materialType":3,"measurementUnit":"根","materialName":"金士顿内存条8g","model":"金士顿"},{"unitPrice":1199,"quantity":44,"materialType":3,"measurementUnit":"块","materialName":"华硕TUF GAMING B660M-PLUS WIFI D4","model":"华硕TUF GAMING B660M-PLUS WIFI D4 4×DDR4 DIMM"},{"unitPrice":4390,"quantity":49,"materialType":3,"measurementUnit":"块","materialName":"Intel 酷睿 i9 12900K","model":"Intel 酷睿 i9 12900K 十六核心 二十四"}]' );
2022-10-15 10:00:19.277 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:00:19.288 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 10:00:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1;
2022-10-15 10:00:19.290 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 10:00:19 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.task_date AS taskDate, ri.content, ri.status, ri.replenishment, ri.staff_code, si.staff_name AS staffName, si.avatar FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1 ORDER BY ri.task_date DESC LIMIT 0,10;
2022-10-15 10:00:42.845 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:00:42.845 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:00:42.848 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 10:00:42 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 10:00:42.852 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 10:00:42 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storehouse_info si WHERE si.transaction_type = 0;
2022-10-15 10:00:42.854 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 10:00:42 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice, si.inbound_order_number AS inboundOrderNumber, si.delivery_order_number AS deliveryOrderNumber FROM storehouse_info si WHERE si.transaction_type = 0 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 10:00:44.930 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:00:44.971 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 10:00:44 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM supplier_info si WHERE 1 = 1;
2022-10-15 10:00:44.972 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 10:00:44 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.purchase_type AS purchaseType, si.supplier_name AS supplierName, si.remark, si.create_date AS createDate FROM supplier_info si WHERE 1 = 1 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 10:05:47.711 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:05:47.759 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 10:05:47 | 耗时 15 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 10:05:47.761 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 10:05:47 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 10:05:49.434 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:05:49.440 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 10:05:49 | 耗时 1 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665051571055' ORDER BY si.create_date DESC;
2022-10-15 10:06:02.575 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:02.684 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 10:06:02 | 耗时 18 ms | SQL 语句：
UPDATE t_user_config SET theme='light', layout='side', multi_page='0', color='rgb(24, 144, 255)' WHERE USER_ID=37;
2022-10-15 10:06:02.685 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 10:06:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='37' ;
2022-10-15 10:06:05.436 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:05.449 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 10:06:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 10:06:05.451 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 10:06:05 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 10:06:06.794 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:06.798 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 10:06:06 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 and osr.code = 'OUT-1664886649542' ORDER BY si.create_date DESC;
2022-10-15 10:06:08.692 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:08.728 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 10:06:08 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 10:06:08.730 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 10:06:08 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 10:06:09.989 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:09.992 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 10:06:09 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 and sr.code = 'IN-1664712933659' ORDER BY si.create_date DESC;
2022-10-15 10:06:13.648 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:13.660 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 10:06:13 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM staff_info si WHERE 1 = 1;
2022-10-15 10:06:13.661 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 10:06:13 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.staff_code AS staffCode, si.staff_name AS staffName, si.staff_type AS staffType, si.staff_sex AS staffSex, si.staff_status AS staffStatus, si.avatar, si.on_board_time AS onBoardTime, si.resign_time AS resignTime, si.birth_date AS birthDate, si.remark, si.email FROM staff_info si WHERE 1 = 1 ORDER BY si.resign_time DESC LIMIT 0,10;
2022-10-15 10:06:15.593 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:15.609 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 10:06:15 | 耗时 8 ms | SQL 语句：
SELECT id,staff_code,salary,current_flag,create_date,type,remark FROM salary_gain WHERE staff_code = 'STAFF-1663768504015' AND current_flag = 1;
2022-10-15 10:06:23.810 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:23.818 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 10:06:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM salary_gain sg LEFT JOIN staff_info si ON si.staff_code = sg.staff_code WHERE 1 = 1;
2022-10-15 10:06:23.820 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 10:06:23 | 耗时 0 ms | SQL 语句：
SELECT sg.id, sg.staff_code AS staffCode, sg.salary, sg.current_flag AS currentFlag, sg.create_date AS createDate, sg.type, sg.remark, si.staff_name AS staffName, si.avatar, si.staff_type AS staffType FROM salary_gain sg LEFT JOIN staff_info si ON si.staff_code = sg.staff_code WHERE 1 = 1 ORDER BY sg.create_date DESC LIMIT 0,10;
2022-10-15 10:06:26.346 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:26.350 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 10:06:26 | 耗时 0 ms | SQL 语句：
SELECT sg.id, sg.salary, sg.current_flag AS currentFlag, sg.create_date AS createDate, sg.type FROM salary_gain sg WHERE 1 = 1 AND sg.staff_code = 'STAFF-1664550140461' ORDER BY sg.create_date ASC;
2022-10-15 10:06:30.213 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:30.216 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 10:06:30 | 耗时 0 ms | SQL 语句：
SELECT sg.id, sg.salary, sg.current_flag AS currentFlag, sg.create_date AS createDate, sg.type FROM salary_gain sg WHERE 1 = 1 AND sg.staff_code = 'STAFF-1664550140461' ORDER BY sg.create_date ASC;
2022-10-15 10:06:31.145 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:31.167 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 10:06:31 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM salary_records sr LEFT JOIN staff_info si ON si.staff_code = sr.staff_code WHERE 1 = 1;
2022-10-15 10:06:31.169 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 10:06:31 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.staff_code AS staffCode, sr.year, sr.month, sr.income, sr.basic_wage AS basicWage, sr.post_allowance AS postAllowance, sr.performance_bonus AS performanceBonus, sr.overtime_pay AS overtimePay, sr.holiday_costs AS holidayCosts, sr.pension, sr.unemployment, sr.medical_insurance AS medicalInsurance, sr.tax, sr.housing_fund AS housingFund, sr.payroll, sr.create_date AS createDate, sr.remark, si.staff_name AS staffName, si.avatar, si.staff_type AS staffType FROM salary_records sr LEFT JOIN staff_info si ON si.staff_code = sr.staff_code WHERE 1 = 1 ORDER BY sr.year DESC, sr.month DESC, sr.payroll DESC LIMIT 0,10;
2022-10-15 10:06:32.686 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:32.691 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 10:06:32 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_code = 'STAFF-1664550140461';
2022-10-15 10:06:38.361 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:38.361 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:38.364 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 10:06:38 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storehouse_info si WHERE si.transaction_type = 0;
2022-10-15 10:06:38.364 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 10:06:38 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 10:06:38.366 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 10:06:38 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice, si.inbound_order_number AS inboundOrderNumber, si.delivery_order_number AS deliveryOrderNumber FROM storehouse_info si WHERE si.transaction_type = 0 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 10:06:49.992 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:50.009 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 10:06:50 | 耗时 11 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.inbound_order_number AS orderNumber, sr.create_date AS createDate FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 AND si.transaction_type = 1 AND si.material_name = '金士顿内存条8g' ORDER BY sr.create_date DESC;
2022-10-15 10:06:50.011 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 10:06:50 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.delivery_order_number AS orderNumber, osr.create_date AS createDate FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 AND si.transaction_type = 2 AND si.material_name = '金士顿内存条8g' ORDER BY osr.create_date DESC;
2022-10-15 10:06:57.332 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:06:57.342 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 10:06:57 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1;
2022-10-15 10:06:57.343 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 10:06:57 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.task_date AS taskDate, ri.content, ri.status, ri.replenishment, ri.staff_code, si.staff_name AS staffName, si.avatar FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1 ORDER BY ri.task_date DESC LIMIT 0,10;
2022-10-15 10:07:03.074 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 10:07:03.082 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 10:07:03 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM supplier_info si WHERE 1 = 1;
2022-10-15 10:07:03.083 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 10:07:03 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.purchase_type AS purchaseType, si.supplier_name AS supplierName, si.remark, si.create_date AS createDate FROM supplier_info si WHERE 1 = 1 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 10:59:27.670 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 11:59:27.667 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 12:09:04.735 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-10-15 12:09:04.816 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:09:04 | 耗时 18 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-10-15T12:09:04.777+0800' WHERE username = 'system';
2022-10-15 12:09:04.822 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:09:04 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 12:09:04.994 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:09:04 | 耗时 6 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'system', '2022-10-15T12:09:04.977+0800', '', '127.0.0.1' );
2022-10-15 12:09:05.061 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:09:05.080 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 12:09:05 | 耗时 8 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system') order by m.order_num;
2022-10-15 12:09:05.255 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:09:05.278 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:09:05 | 耗时 19 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 12:09:05.280 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:09:05 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 12:09:05.282 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:09:05 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 12:09:05.285 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:09:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 12:09:05.287 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:09:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 12:09:10.234 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:09:10.244 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 12:09:10 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 12:09:10.246 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 12:09:10 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 12:09:12.003 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:09:12.017 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:09:12 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 12:09:12.019 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:09:12 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 12:09:13.080 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:09:13.092 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:09:13 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:09:13.094 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:09:13 | 耗时 1 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:09:21.653 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:09:21.654 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:09:21.659 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 12:09:21 | 耗时 1 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 12:09:21.660 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:09:21 | 耗时 0 ms | SQL 语句：
SELECT id,supplier_name,create_date,remark,purchase_type FROM supplier_info;
2022-10-15 12:10:25.112 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:10:25.135 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:10:25 | 耗时 6 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE transaction_type = 0 AND material_name LIKE '%西部数据蓝盘 1TB%' limit 8;
2022-10-15 12:11:02.919 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:11:02.923 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:11:02 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE transaction_type = 0 AND material_name LIKE '%希捷BarraCuda 2TB%' limit 8;
2022-10-15 12:11:36.278 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:11:36.283 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 12:11:36 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE transaction_type = 0 AND material_name LIKE '%AOC 27G2%' limit 8;
2022-10-15 12:12:16.141 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:12:16.148 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:12:16 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE transaction_type = 0 AND material_name LIKE '%v%' limit 8;
2022-10-15 12:12:17.382 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:12:17.386 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 12:12:17 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.inbound_order_number AS orderNumber, sr.create_date AS createDate FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 AND si.transaction_type = 1 AND si.material_name = 'remote' ORDER BY sr.create_date DESC;
2022-10-15 12:12:17.388 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 12:12:17 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.delivery_order_number AS orderNumber, osr.create_date AS createDate FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 AND si.transaction_type = 2 AND si.material_name = 'remote' ORDER BY osr.create_date DESC;
2022-10-15 12:12:17.609 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:12:17.613 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:12:17 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE transaction_type = 0 AND material_name LIKE '%Redmi RMMNT215NF%' limit 8;
2022-10-15 12:12:49.384 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:12:49.389 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:12:49 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE transaction_type = 0 AND material_name LIKE '%Cherry MX3.0S Wireless机械键盘%' limit 8;
2022-10-15 12:13:05.954 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:13:05.992 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 12:13:05 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE material_name IN ('西部数据蓝盘 1TB','希捷BarraCuda 2TB','AOC 27G2','Redmi RMMNT215NF','Cherry MX3.0S Wireless机械键盘') AND transaction_type = 0;
2022-10-15 12:14:34.784 febs [Thread-20] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-10-15 12:14:34.799 febs [Thread-20] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-10-15 12:14:34.800 febs [Thread-20] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-10-15 12:14:34.800 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665799165535 shutting down.
2022-10-15 12:14:34.800 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665799165535 paused.
2022-10-15 12:14:34.802 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665799165535 shutdown complete.
2022-10-15 12:14:34.807 febs [Thread-20] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-10-15 12:14:34.807 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-10-15 12:14:34.813 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-10-15 12:14:41.480 febs [main] INFO  cc.mrbird.febs.StoreApplication - Starting StoreApplication on WIN-ETS2DEK9JHC with PID 13924 (started by Administrator in E:\Project\超商成本核算管理系统\store_cost\backend)
2022-10-15 12:14:41.483 febs [main] INFO  cc.mrbird.febs.StoreApplication - No active profile set, falling back to default profiles: default
2022-10-15 12:14:42.500 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-10-15 12:14:42.502 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-10-15 12:14:42.551 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36ms. Found 0 repository interfaces.
2022-10-15 12:14:42.910 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$3a6c5220] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.027 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.112 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$14bb9dc4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.120 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.123 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.138 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ab2d2cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.158 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$16ad2e9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.675 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$f71e5f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.692 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.696 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.792 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.800 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$fcb48902] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.804 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.809 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e8f5998d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.818 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.819 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:43.822 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-10-15 12:14:43.828 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-10-15 12:14:44.079 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-10-15 12:14:44.079 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-10-15 12:14:44.079 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-10-15 12:14:44.080 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-10-15 12:14:44.080 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.090 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.098 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.861 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.868 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.870 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.872 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.898 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.899 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.905 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.906 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.908 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.947 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.965 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.987 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.988 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:44.990 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.012 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.013 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.036 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.037 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.040 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.057 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.074 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$6c0ac84] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.079 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$b90d6e9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.081 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$7424548c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.089 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.094 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$9aefcbba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.099 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.101 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$e8cc4a13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.111 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.113 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.116 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.118 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.136 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.148 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.152 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.153 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.158 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.172 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 12:14:45.476 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-10-15 12:14:45.487 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-10-15 12:14:45.492 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-10-15 12:14:45.493 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-10-15 12:14:45.498 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\办公软件\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-10-15 12:14:45.637 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-10-15 12:14:45.637 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4115 ms
2022-10-15 12:14:46.200 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-10-15 12:14:46.200 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-10-15 12:14:46.200 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-10-15 12:14:46.200 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-10-15 12:14:46.200 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-10-15 12:14:46.200 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-10-15 12:14:46.200 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-10-15 12:14:46.200 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-10-15 12:14:46.701 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-10-15 12:14:46.712 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-10-15 12:14:46.713 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-10-15 12:14:46.716 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-10-15 12:14:46.718 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-10-15 12:14:46.719 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1665807286702'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-10-15 12:14:46.719 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-10-15 12:14:46.719 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-10-15 12:14:46.720 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@838e109
2022-10-15 12:14:46.769 febs [main] INFO  p6spy - 2022-10-15 12:14:46 | 耗时 7 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-10-15 12:14:47.460 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-10-15 12:14:48.669 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-10-15 12:14:48.728 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-10-15 12:14:48.821 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-10-15 12:14:48.832 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-10-15 12:14:48.833 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 12:14:48.846 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-10-15 12:14:48.849 febs [main] INFO  cc.mrbird.febs.StoreApplication - Started StoreApplication in 7.883 seconds (JVM running for 8.743)
2022-10-15 12:14:48.859 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-10-15 12:14:48.860 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-10-15 12:14:48.860 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-10-15 12:14:48.892 febs [main] INFO  p6spy - 2022-10-15 12:14:48 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-10-15 12:14:48.901 febs [main] INFO  p6spy - 2022-10-15 12:14:48 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 12:14:48.965 febs [main] INFO  p6spy - 2022-10-15 12:14:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-10-15 12:14:48.988 febs [main] INFO  p6spy - 2022-10-15 12:14:48 | 耗时 13 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-10-15 12:14:48.997 febs [main] INFO  p6spy - 2022-10-15 12:14:48 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-10-15 12:14:49.001 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 12:14:49.003 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-10-15 12:14:49.006 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-10-15 12:14:49.008 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-10-15 12:14:49.011 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 12:14:49.013 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-10-15 12:14:49.016 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-10-15 12:14:49.017 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-10-15 12:14:49.019 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'xiaoduan' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 12:14:49.022 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'xiaoduan';
2022-10-15 12:14:49.024 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'xiaoduan' and m.perms is not null and m.perms <> '';
2022-10-15 12:14:49.026 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-10-15 12:14:49.028 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 12:14:49.030 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test';
2022-10-15 12:14:49.032 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test' and m.perms is not null and m.perms <> '';
2022-10-15 12:14:49.034 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16' ;
2022-10-15 12:14:49.035 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'ddmtest14' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 12:14:49.039 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'ddmtest14';
2022-10-15 12:14:49.041 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'ddmtest14' and m.perms is not null and m.perms <> '';
2022-10-15 12:14:49.043 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='33' ;
2022-10-15 12:14:49.044 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 12:14:49.046 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test1';
2022-10-15 12:14:49.048 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test1' and m.perms is not null and m.perms <> '';
2022-10-15 12:14:49.050 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='34' ;
2022-10-15 12:14:49.052 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 12:14:49.054 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-10-15 12:14:49.057 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-10-15 12:14:49.063 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='35' ;
2022-10-15 12:14:49.065 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test33333' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 12:14:49.067 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test33333';
2022-10-15 12:14:49.069 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test33333' and m.perms is not null and m.perms <> '';
2022-10-15 12:14:49.070 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='36' ;
2022-10-15 12:14:49.072 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 12:14:49.074 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system';
2022-10-15 12:14:49.077 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'system' and m.perms is not null and m.perms <> '';
2022-10-15 12:14:49.079 febs [main] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='37' ;
2022-10-15 12:14:49.080 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-10-15 12:14:49.080 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-10-15 12:14:49.080 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-10-15 12:14:49.080 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-10-15 12:14:49.080 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2022-10-15T12:14:49.080
2022-10-15 12:14:49.663 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-10-15 12:14:49.663 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-10-15 12:14:49.675 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-10-15 12:14:49.676 febs [RMI TCP Connection(2)-192.168.1.5] INFO  p6spy - 2022-10-15 12:14:49 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-10-15 12:14:55.256 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:14:55.381 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:14:55 | 耗时 6 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE material_name IN ('西部数据蓝盘 1TB','希捷BarraCuda 2TB','AOC 27G2','Redmi RMMNT215NF','Cherry MX3.0S Wireless机械键盘') AND transaction_type = 0;
2022-10-15 12:14:55.477 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:14:55 | 耗时 9 ms | SQL 语句：
INSERT INTO storage_record ( code, supplier_id, handler_code, custodian_code, total_price, create_date, remark ) VALUES ( 'IN-1665807295301', 2, 'STAFF-1663768504015', 'STAFF-1663768504015', 160760, '2022-10-15 12:14:55', '2022-10-15入库信息' );
2022-10-15 12:14:55.529 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:14:55.609 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:14:55 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:14:55.615 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:14:55 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:14:59.901 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:14:59.902 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:14:59.909 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 12:14:59 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 12:14:59.913 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:14:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storehouse_info si WHERE si.transaction_type = 0;
2022-10-15 12:14:59.914 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:14:59 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice, si.inbound_order_number AS inboundOrderNumber, si.delivery_order_number AS deliveryOrderNumber FROM storehouse_info si WHERE si.transaction_type = 0 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 12:15:03.232 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:15:03.239 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 12:15:03 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.inbound_order_number AS orderNumber, sr.create_date AS createDate FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 AND si.transaction_type = 1 AND si.material_name = '西部数据蓝盘 1TB' ORDER BY sr.create_date DESC;
2022-10-15 12:15:03.244 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 12:15:03 | 耗时 3 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.delivery_order_number AS orderNumber, osr.create_date AS createDate FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 AND si.transaction_type = 2 AND si.material_name = '西部数据蓝盘 1TB' ORDER BY osr.create_date DESC;
2022-10-15 12:15:23.615 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:15:23.626 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:15:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM supplier_info si WHERE 1 = 1;
2022-10-15 12:15:23.626 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:15:23 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.purchase_type AS purchaseType, si.supplier_name AS supplierName, si.remark, si.create_date AS createDate FROM supplier_info si WHERE 1 = 1 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 12:15:24.102 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:15:24.120 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:15:24 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 12:15:24.122 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:15:24 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 12:15:30.396 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:15:30.409 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:15:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 12:15:30.410 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:15:30 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 12:15:31.429 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:15:31.433 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:15:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 12:15:31.435 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:15:31 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 12:16:53.723 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:16:53.727 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:16:53 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665051571055' ORDER BY si.create_date DESC;
2022-10-15 12:17:04.609 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:17:04.612 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:17:04 | 耗时 1 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665104249027' ORDER BY si.create_date DESC;
2022-10-15 12:19:36.579 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:19:36.585 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 12:19:36 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 12:19:36.587 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 12:19:36 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 12:19:38.686 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:19:38.690 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:19:38 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:19:38.692 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:19:38 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:21:27.331 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:21:27.370 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:21:27 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM staff_info si WHERE 1 = 1;
2022-10-15 12:21:27.371 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:21:27 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.staff_code AS staffCode, si.staff_name AS staffName, si.staff_type AS staffType, si.staff_sex AS staffSex, si.staff_status AS staffStatus, si.avatar, si.on_board_time AS onBoardTime, si.resign_time AS resignTime, si.birth_date AS birthDate, si.remark, si.email FROM staff_info si WHERE 1 = 1 ORDER BY si.resign_time DESC LIMIT 0,10;
2022-10-15 12:21:28.551 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:21:28.566 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:21:28 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM salary_gain sg LEFT JOIN staff_info si ON si.staff_code = sg.staff_code WHERE 1 = 1;
2022-10-15 12:21:28.568 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:21:28 | 耗时 0 ms | SQL 语句：
SELECT sg.id, sg.staff_code AS staffCode, sg.salary, sg.current_flag AS currentFlag, sg.create_date AS createDate, sg.type, sg.remark, si.staff_name AS staffName, si.avatar, si.staff_type AS staffType FROM salary_gain sg LEFT JOIN staff_info si ON si.staff_code = sg.staff_code WHERE 1 = 1 ORDER BY sg.create_date DESC LIMIT 0,10;
2022-10-15 12:21:29.985 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:21:30.019 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:21:30 | 耗时 22 ms | SQL 语句：
SELECT COUNT(1) FROM salary_records sr LEFT JOIN staff_info si ON si.staff_code = sr.staff_code WHERE 1 = 1;
2022-10-15 12:21:30.020 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:21:30 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.staff_code AS staffCode, sr.year, sr.month, sr.income, sr.basic_wage AS basicWage, sr.post_allowance AS postAllowance, sr.performance_bonus AS performanceBonus, sr.overtime_pay AS overtimePay, sr.holiday_costs AS holidayCosts, sr.pension, sr.unemployment, sr.medical_insurance AS medicalInsurance, sr.tax, sr.housing_fund AS housingFund, sr.payroll, sr.create_date AS createDate, sr.remark, si.staff_name AS staffName, si.avatar, si.staff_type AS staffType FROM salary_records sr LEFT JOIN staff_info si ON si.staff_code = sr.staff_code WHERE 1 = 1 ORDER BY sr.year DESC, sr.month DESC, sr.payroll DESC LIMIT 0,10;
2022-10-15 12:21:31.296 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:21:31.299 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 12:21:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storehouse_info si WHERE si.transaction_type = 0;
2022-10-15 12:21:31.301 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 12:21:31 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice, si.inbound_order_number AS inboundOrderNumber, si.delivery_order_number AS deliveryOrderNumber FROM storehouse_info si WHERE si.transaction_type = 0 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 12:21:31.304 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:21:31.307 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:21:31 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 12:21:32.502 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:21:32.534 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:21:32 | 耗时 22 ms | SQL 语句：
SELECT COUNT(1) FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1;
2022-10-15 12:21:32.535 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:21:32 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.task_date AS taskDate, ri.content, ri.status, ri.replenishment, ri.staff_code, si.staff_name AS staffName, si.avatar FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1 ORDER BY ri.task_date DESC LIMIT 0,10;
2022-10-15 12:21:34.705 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:21:34.711 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:21:34 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM staff_info si WHERE 1 = 1;
2022-10-15 12:21:34.712 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:21:34 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.staff_code AS staffCode, si.staff_name AS staffName, si.staff_type AS staffType, si.staff_sex AS staffSex, si.staff_status AS staffStatus, si.avatar, si.on_board_time AS onBoardTime, si.resign_time AS resignTime, si.birth_date AS birthDate, si.remark, si.email FROM staff_info si WHERE 1 = 1 ORDER BY si.resign_time DESC LIMIT 0,10;
2022-10-15 12:21:35.266 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:21:35.271 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:21:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:21:35.272 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:21:35 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:32:28.842 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:32:28.854 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:32:28 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:32:28.856 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:32:28 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:32:43.479 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:32:43.483 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:32:43 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:32:43.485 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:32:43 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:34:50.009 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:34:50.013 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 12:34:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:34:50.015 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 12:34:50 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:36:17.185 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:36:17.191 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:36:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:36:17.192 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:36:17 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:37:18.159 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:37:18.163 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 12:37:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:37:18.164 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 12:37:18 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:45:29.845 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:45:29.856 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:45:29 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:45:29.859 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:45:29 | 耗时 1 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:45:31.113 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:45:31.134 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:45:31 | 耗时 17 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 12:45:31.135 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:45:31 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 12:45:33.073 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:45:33.080 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:45:33 | 耗时 4 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665051571055' ORDER BY si.create_date DESC;
2022-10-15 12:45:33.089 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:45:33 | 耗时 0 ms | SQL 语句：
SELECT id,code,total_price,handler_code,create_time,remark FROM order_info WHERE code = 'ORDER-1665051571055';
2022-10-15 12:46:02.504 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:46:02.507 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:46:02 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665104249027' ORDER BY si.create_date DESC;
2022-10-15 12:46:02.510 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:46:02 | 耗时 0 ms | SQL 语句：
SELECT id,code,total_price,handler_code,create_time,remark FROM order_info WHERE code = 'ORDER-1665104249027';
2022-10-15 12:46:21.028 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:46:21.031 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:46:21 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 12:46:21.033 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:46:21 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 12:46:28.242 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:46:28.246 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:46:28 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 12:46:28.249 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:46:28 | 耗时 1 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 12:46:29.393 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:46:29.397 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:46:29 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665104249027' ORDER BY si.create_date DESC;
2022-10-15 12:46:29.400 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:46:29 | 耗时 0 ms | SQL 语句：
SELECT id,code,total_price,handler_code,create_time,remark FROM order_info WHERE code = 'ORDER-1665104249027';
2022-10-15 12:47:23.146 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:47:23.150 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:47:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 12:47:23.152 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:47:23 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 12:47:37.189 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:47:37.192 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:47:37 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665104249027' ORDER BY si.create_date DESC;
2022-10-15 12:47:37.196 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:47:37 | 耗时 1 ms | SQL 语句：
SELECT id,code,total_price,handler_code,create_time,remark FROM order_info WHERE code = 'ORDER-1665104249027';
2022-10-15 12:47:58.102 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:47:58.106 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:47:58 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 12:47:58.107 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:47:58 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 12:48:03.365 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:48:03.369 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:48:03 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665104249027' ORDER BY si.create_date DESC;
2022-10-15 12:48:03.373 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:48:03 | 耗时 0 ms | SQL 语句：
SELECT id,code,total_price,handler_code,create_time,remark FROM order_info WHERE code = 'ORDER-1665104249027';
2022-10-15 12:48:10.898 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:48:10.901 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:48:10 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 12:48:10.903 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:48:10 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 12:49:13.400 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:49:13.403 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 12:49:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 12:49:13.405 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 12:49:13 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 12:49:16.068 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:49:16.072 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 12:49:16 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665104249027' ORDER BY si.create_date DESC;
2022-10-15 12:49:16.076 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 12:49:16 | 耗时 0 ms | SQL 语句：
SELECT id,code,total_price,handler_code,create_time,remark FROM order_info WHERE code = 'ORDER-1665104249027';
2022-10-15 12:49:37.675 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:49:37.679 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 12:49:37 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665104249027' ORDER BY si.create_date DESC;
2022-10-15 12:49:42.778 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:49:42.782 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 12:49:42 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 12:49:56.348 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:49:56.358 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 12:49:56 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE transaction_type = 0 AND material_name LIKE '%a%' limit 8;
2022-10-15 12:49:59.903 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:49:59.907 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:49:59 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE transaction_type = 0 AND material_name LIKE '%a%' limit 8;
2022-10-15 12:50:03.945 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:50:03.949 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:50:03 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE transaction_type = 0 AND material_name LIKE '%d%' limit 8;
2022-10-15 12:50:07.225 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:50:07.235 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:50:07 | 耗时 0 ms | SQL 语句：
INSERT INTO order_info ( code, total_price, handler_code, create_time, remark ) VALUES ( 'ORDER-1665809407227', 3305, 'STAFF-1663768504015', '2022-10-15 12:50:07', '测试信息' );
2022-10-15 12:50:07.303 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:50:07.306 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:50:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 12:50:07.307 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 12:50:07 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 12:50:09.898 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:50:09.901 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:50:09 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665809407227' ORDER BY si.create_date DESC;
2022-10-15 12:50:09.904 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:50:09 | 耗时 0 ms | SQL 语句：
SELECT id,code,total_price,handler_code,create_time,remark FROM order_info WHERE code = 'ORDER-1665809407227';
2022-10-15 12:50:29.864 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:50:29.867 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:50:29 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665809407227' ORDER BY si.create_date DESC;
2022-10-15 12:52:40.977 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:52:40.991 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 12:52:40 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 12:52:40.993 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 12:52:40 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 12:53:06.554 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:53:06.557 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 12:53:06 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665809407227' ORDER BY si.create_date DESC;
2022-10-15 12:53:06.559 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 12:53:06 | 耗时 0 ms | SQL 语句：
SELECT id,code,total_price,handler_code,create_time,remark FROM order_info WHERE code = 'ORDER-1665809407227';
2022-10-15 12:53:26.395 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:53:26.420 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 12:53:26 | 耗时 20 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:53:26.421 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 12:53:26 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:55:30.507 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:55:30.511 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:55:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:55:30.513 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:55:30 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:56:06.994 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:56:06.998 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:56:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:56:06.999 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:56:06 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:57:15.395 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:57:15.398 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 12:57:15 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 and sr.code = 'IN-1665807295301' ORDER BY si.create_date DESC;
2022-10-15 12:58:21.898 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:58:21.903 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:58:21 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:58:21.905 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 12:58:21 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:59:07.549 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:59:07.553 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:59:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:59:07.555 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 12:59:07 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:59:39.323 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:59:39.327 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:59:39 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:59:39.328 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 12:59:39 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 12:59:58.494 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 12:59:58.500 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:59:58 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 12:59:58.502 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 12:59:58 | 耗时 1 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:03:16.642 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:03:16.647 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:03:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:03:16.648 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:03:16 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:03:23.825 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:03:23.829 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:03:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:03:23.830 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:03:23 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:04:29.446 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:04:29.450 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:04:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:04:29.452 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:04:29 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:04:39.937 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:04:39.941 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:04:39 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:04:39.943 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:04:39 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:04:49.673 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:04:49.679 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:04:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:04:49.680 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:04:49 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:05:11.053 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:05:11.058 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 13:05:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:05:11.059 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 13:05:11 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:05:19.559 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:05:19.563 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 13:05:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:05:19.565 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 13:05:19 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:05:23.713 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:05:23.718 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:05:23 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 and sr.code = 'IN-1664712933659' ORDER BY si.create_date DESC;
2022-10-15 13:05:23.728 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:05:23 | 耗时 0 ms | SQL 语句：
SELECT id,code,supplier_id,handler_code,custodian_code,total_price,create_date,remark FROM storage_record WHERE code = 'IN-1664712933659';
2022-10-15 13:05:51.477 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:05:51.481 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:05:51 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:05:51.483 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:05:51 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:06:10.209 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:06:10.213 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:06:10 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:06:10.215 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:06:10 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:06:14.195 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:06:14.199 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 13:06:14 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 and sr.code = 'IN-1664712933659' ORDER BY si.create_date DESC;
2022-10-15 13:06:14.202 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 13:06:14 | 耗时 0 ms | SQL 语句：
SELECT id,code,supplier_id,handler_code,custodian_code,total_price,create_date,remark FROM storage_record WHERE code = 'IN-1664712933659';
2022-10-15 13:07:58.307 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:07:58.312 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 13:07:58 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:07:58.314 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 13:07:58 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:08:03.881 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:08:03.886 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 13:08:03 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:08:03.889 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 13:08:03 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:08:05.585 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:08:05.590 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 13:08:05 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 and sr.code = 'IN-1664712933659' ORDER BY si.create_date DESC;
2022-10-15 13:08:05.593 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 13:08:05 | 耗时 0 ms | SQL 语句：
SELECT id,code,supplier_id,handler_code,custodian_code,total_price,create_date,remark FROM storage_record WHERE code = 'IN-1664712933659';
2022-10-15 13:08:49.054 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:08:49.058 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:08:49 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 and sr.code = 'IN-1664712933659' ORDER BY si.create_date DESC;
2022-10-15 13:08:49.062 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:08:49 | 耗时 0 ms | SQL 语句：
SELECT id,code,supplier_id,handler_code,custodian_code,total_price,create_date,remark FROM storage_record WHERE code = 'IN-1664712933659';
2022-10-15 13:09:23.054 febs [http-nio-9527-exec-9] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-10-15 13:09:23.184 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 13:09:23 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-10-15T13:09:23.167+0800' WHERE username = 'system';
2022-10-15 13:09:23.190 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 13:09:23 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 13:09:23.218 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 13:09:23 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'system', '2022-10-15T13:09:23.206+0800', '', '127.0.0.1' );
2022-10-15 13:09:23.291 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:09:23.315 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 13:09:23 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system') order by m.order_num;
2022-10-15 13:09:23.601 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:09:23.684 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 13:09:23 | 耗时 79 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:09:23.686 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 13:09:23 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:09:23.688 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 13:09:23 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:09:23.691 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 13:09:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:09:23.694 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 13:09:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:09:26.408 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:09:26.412 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:09:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:09:26.414 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:09:26 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:09:28.306 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:09:28.317 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:09:28 | 耗时 7 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 and sr.code = 'IN-1664712933659' ORDER BY si.create_date DESC;
2022-10-15 13:11:03.731 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:11:03.737 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:11:03 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:11:03.738 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:11:03 | 耗时 1 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:11:06.132 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:11:06.138 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:11:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:11:06.140 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:11:06 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:11:07.354 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:11:07.359 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:11:07 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 and sr.code = 'IN-1664712933659' ORDER BY si.create_date DESC;
2022-10-15 13:11:07.363 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:11:07 | 耗时 0 ms | SQL 语句：
SELECT id,code,supplier_id,handler_code,custodian_code,total_price,create_date,remark FROM storage_record WHERE code = 'IN-1664712933659';
2022-10-15 13:11:43.389 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:11:43.393 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 13:11:43 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:11:43.395 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 13:11:43 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:11:55.559 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:11:55.563 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 13:11:55 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 and sr.code = 'IN-1664712933659' ORDER BY si.create_date DESC;
2022-10-15 13:11:55.566 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 13:11:55 | 耗时 0 ms | SQL 语句：
SELECT id,code,supplier_id,handler_code,custodian_code,total_price,create_date,remark FROM storage_record WHERE code = 'IN-1664712933659';
2022-10-15 13:14:48.832 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 13:18:21.309 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:18:21.317 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 13:18:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:18:21.319 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 13:18:21 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:18:23.592 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:18:23.597 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:18:23 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 13:18:23.616 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:18:23.619 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:18:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storehouse_info si WHERE si.transaction_type = 0;
2022-10-15 13:18:23.620 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:18:23 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice, si.inbound_order_number AS inboundOrderNumber, si.delivery_order_number AS deliveryOrderNumber FROM storehouse_info si WHERE si.transaction_type = 0 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 13:18:25.090 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:18:25.113 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:18:25 | 耗时 18 ms | SQL 语句：
SELECT COUNT(1) FROM staff_info si WHERE 1 = 1;
2022-10-15 13:18:25.114 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:18:25 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.staff_code AS staffCode, si.staff_name AS staffName, si.staff_type AS staffType, si.staff_sex AS staffSex, si.staff_status AS staffStatus, si.avatar, si.on_board_time AS onBoardTime, si.resign_time AS resignTime, si.birth_date AS birthDate, si.remark, si.email FROM staff_info si WHERE 1 = 1 ORDER BY si.resign_time DESC LIMIT 0,10;
2022-10-15 13:18:25.883 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:18:25.892 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 13:18:25 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 13:18:25.894 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 13:18:25 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 13:18:27.578 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:18:27.583 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 13:18:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 13:18:27.585 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 13:18:27 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 13:18:28.424 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:18:28.428 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:18:28 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 13:18:28.430 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:18:28 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 13:18:29.786 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:18:29.791 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:18:29 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 and osr.code = 'OUT-1664866843062' ORDER BY si.create_date DESC;
2022-10-15 13:18:29.799 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:18:29 | 耗时 0 ms | SQL 语句：
SELECT id,code,handler_code,custodian_code,create_date,remark FROM out_stock_record WHERE code = 'OUT-1664866843062';
2022-10-15 13:19:09.209 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:19:09.213 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 13:19:09 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 13:19:09.215 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 13:19:09 | 耗时 1 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 13:20:27.509 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:20:27.513 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:20:27 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 and osr.code = 'OUT-1664866843062' ORDER BY si.create_date DESC;
2022-10-15 13:20:27.517 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:20:27 | 耗时 0 ms | SQL 语句：
SELECT id,code,handler_code,custodian_code,create_date,remark FROM out_stock_record WHERE code = 'OUT-1664866843062';
2022-10-15 13:20:59.023 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:20:59.029 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:20:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 13:20:59.031 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:20:59 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 13:21:05.398 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:21:05.402 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:21:05 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:21:05.404 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:21:05 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:21:05.406 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:21:05 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:21:05.409 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:21:05 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:21:05.412 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:21:05 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:21:38.435 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:21:38.438 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 13:21:38 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:21:38.439 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 13:21:38 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:21:38.441 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 13:21:38 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:21:38.442 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 13:21:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:21:38.444 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 13:21:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:21:42.775 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:21:42.779 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:21:42 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:21:42.781 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:21:42 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:21:42.783 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:21:42 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:21:42.784 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:21:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:21:42.786 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:21:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:22:27.524 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:22:27.576 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 13:22:27 | 耗时 49 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:22:27.578 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 13:22:27 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:22:27.579 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 13:22:27 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:22:27.581 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 13:22:27 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:22:27.583 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 13:22:27 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:25:16.816 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:25:16.819 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:25:16 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:25:16.821 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:25:16 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:25:16.822 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:25:16 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:25:16.824 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:25:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:25:16.825 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:25:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:28:07.711 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:28:07.714 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:28:07 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:28:07.717 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:28:07 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:28:07.718 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:28:07 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:28:07.720 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:28:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:28:07.722 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:28:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:28:33.348 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:28:33.352 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:28:33 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:28:33.354 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:28:33 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:28:33.355 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:28:33 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:28:33.357 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:28:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:28:33.359 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:28:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:33:59.760 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:33:59.765 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:33:59 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:33:59.767 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:33:59 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:33:59.768 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:33:59 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:33:59.770 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:33:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:33:59.772 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:33:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:34:38.892 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:34:38.913 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:34:38 | 耗时 18 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:34:38.915 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:34:38 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:34:38.917 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:34:38 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:34:38.919 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:34:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:34:38.921 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 13:34:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:35:06.602 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:35:06.607 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:35:06 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:35:06.609 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:35:06 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:35:06.610 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:35:06 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:35:06.612 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:35:06 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:35:06.614 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 13:35:06 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:39:36.757 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:39:36.761 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:39:36 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:39:36.763 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:39:36 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:39:36.764 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:39:36 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:39:36.765 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:39:36 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:39:36.767 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:39:36 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:41:09.851 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:41:09.854 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:41:09 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:41:09.856 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:41:09 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:41:09.857 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:41:09 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:41:09.858 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:41:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:41:09.860 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 13:41:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:43:03.776 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:43:03.781 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 13:43:03 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:43:03.783 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 13:43:03 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:43:03.785 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 13:43:03 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:43:03.786 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 13:43:03 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:43:03.788 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 13:43:03 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:43:30.584 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:43:30.588 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:43:30 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:43:30.590 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:43:30 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:43:30.592 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:43:30 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:43:30.593 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:43:30 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:43:30.595 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 13:43:30 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 13:43:50.529 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 13:43:50.535 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:43:50 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 13:43:50.537 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:43:50 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:43:50.538 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:43:50 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 13:43:50.540 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:43:50 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 13:43:50.542 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 13:43:50 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 14:14:48.828 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 15:14:48.825 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 16:14:48.833 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 17:14:48.820 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 17:25:30.752 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-10-15 17:25:30.780 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 17:25:30 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'sysem';
2022-10-15 17:25:35.075 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-10-15 17:25:35.083 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 17:25:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'syst\em';
2022-10-15 17:25:39.283 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-10-15 17:25:39.296 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:25:39 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-10-15T17:25:39.290+0800' WHERE username = 'system';
2022-10-15 17:25:39.304 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:25:39 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 17:25:39.368 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:25:39 | 耗时 4 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'system', '2022-10-15T17:25:39.317+0800', '', '127.0.0.1' );
2022-10-15 17:25:39.404 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:25:39.414 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 17:25:39 | 耗时 6 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system') order by m.order_num;
2022-10-15 17:25:39.669 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:25:39.675 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:25:39 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:25:39.677 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:25:39 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:25:39.678 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:25:39 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:25:39.681 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:25:39 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:25:39.683 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:25:39 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:26:24.238 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:26:24.242 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:26:24 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:26:24.243 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:26:24 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:26:24.244 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:26:24 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:26:24.246 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:26:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:26:24.247 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:26:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:28:03.776 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:28:03.779 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 17:28:03 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:28:03.783 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 17:28:03 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:28:03.784 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 17:28:03 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:28:03.787 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 17:28:03 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:28:03.790 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 17:28:03 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:28:41.078 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:28:41.082 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:28:41 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:28:41.084 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:28:41 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:28:41.085 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:28:41 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:28:41.088 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:28:41 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:28:41.090 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:28:41 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:28:53.985 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:28:53.988 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 17:28:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:28:53.990 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 17:28:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:28:53.992 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 17:28:53 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:28:53.993 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 17:28:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:28:53.995 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 17:28:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:31:05.063 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:31:05.071 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:31:05 | 耗时 5 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:31:05.075 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:31:05 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:31:05.076 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:31:05 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:31:05.079 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:31:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:31:05.081 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:31:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:31:26.128 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:31:26.132 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 17:31:26 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:31:26.134 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 17:31:26 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:31:26.135 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 17:31:26 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:31:26.137 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 17:31:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:31:26.139 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 17:31:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:31:57.407 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:31:57.411 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:31:57 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:31:57.412 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:31:57 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:31:57.414 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:31:57 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:31:57.416 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:31:57 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:31:57.418 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:31:57 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:32:08.024 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:32:08.049 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 17:32:08 | 耗时 23 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:32:08.051 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 17:32:08 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:32:08.052 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 17:32:08 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:32:08.053 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 17:32:08 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:32:08.055 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 17:32:08 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:32:14.791 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:32:14.795 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:32:14 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:32:14.797 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:32:14 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:32:14.798 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:32:14 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:32:14.800 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:32:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:32:14.802 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:32:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:32:37.630 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:32:37.633 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:32:37 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:32:37.634 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:32:37 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:32:37.636 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:32:37 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:32:37.638 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:32:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:32:37.640 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:32:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:32:41.979 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:32:41.983 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 17:32:41 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:32:41.984 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 17:32:41 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:32:41.986 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 17:32:41 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:32:41.988 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 17:32:41 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:32:41.990 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 17:32:41 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:33:20.486 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:33:20.490 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 17:33:20 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:33:20.491 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 17:33:20 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:33:20.493 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 17:33:20 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:33:20.494 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 17:33:20 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:33:20.496 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 17:33:20 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:34:30.919 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:34:30.923 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 17:34:30 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:34:30.924 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 17:34:30 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:34:30.926 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 17:34:30 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:34:30.927 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 17:34:30 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:34:30.929 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 17:34:30 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:34:31.148 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:34:31.150 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 17:34:31 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:34:31.152 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 17:34:31 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:34:31.153 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 17:34:31 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:34:31.155 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 17:34:31 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:34:31.156 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 17:34:31 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:38:19.077 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-10-15 17:38:19.099 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-10-15 17:38:19.099 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-10-15 17:38:19.099 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665807286702 shutting down.
2022-10-15 17:38:19.100 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665807286702 paused.
2022-10-15 17:38:19.101 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665807286702 shutdown complete.
2022-10-15 17:38:19.105 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-10-15 17:38:19.106 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-10-15 17:38:19.111 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-10-15 17:38:27.715 febs [main] INFO  cc.mrbird.febs.StoreApplication - Starting StoreApplication on WIN-ETS2DEK9JHC with PID 16028 (started by Administrator in E:\Project\超商成本核算管理系统\store_cost\backend)
2022-10-15 17:38:27.718 febs [main] INFO  cc.mrbird.febs.StoreApplication - No active profile set, falling back to default profiles: default
2022-10-15 17:38:32.029 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-10-15 17:38:32.032 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-10-15 17:38:32.080 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36ms. Found 0 repository interfaces.
2022-10-15 17:38:32.473 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$bbdf4d59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:32.596 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:32.686 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$962e98fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:32.694 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:32.698 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:32.709 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2ca0282c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:32.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$982029d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:33.170 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$90e4e129] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:33.192 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:33.196 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:33.285 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:33.291 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$7e27843b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:33.294 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:33.300 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$6a6894c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:33.308 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:33.309 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:33.312 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-10-15 17:38:33.319 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-10-15 17:38:33.541 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-10-15 17:38:33.541 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-10-15 17:38:33.541 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-10-15 17:38:33.541 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-10-15 17:38:33.542 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:33.554 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:33.561 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.426 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.431 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.434 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.436 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.457 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.458 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.464 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.466 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.500 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.517 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.540 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.541 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.543 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.566 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.568 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.591 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.592 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.595 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.612 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.631 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$8833a7bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.635 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$3a8069d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.637 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$f5974fc5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.643 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.645 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.649 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$1c62c6f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.654 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.655 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$6a3f454c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.666 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.667 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.692 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.694 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.712 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.733 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.734 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:34.756 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 17:38:35.201 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-10-15 17:38:35.214 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-10-15 17:38:35.219 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-10-15 17:38:35.219 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-10-15 17:38:35.224 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\办公软件\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-10-15 17:38:35.367 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-10-15 17:38:35.367 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7610 ms
2022-10-15 17:38:35.977 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-10-15 17:38:35.978 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-10-15 17:38:35.978 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-10-15 17:38:35.978 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-10-15 17:38:35.978 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-10-15 17:38:35.978 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-10-15 17:38:35.978 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-10-15 17:38:35.978 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-10-15 17:38:36.502 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-10-15 17:38:36.515 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-10-15 17:38:36.515 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-10-15 17:38:36.519 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-10-15 17:38:36.520 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-10-15 17:38:36.521 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1665826716503'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-10-15 17:38:36.521 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-10-15 17:38:36.521 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-10-15 17:38:36.522 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@43fbc2bf
2022-10-15 17:38:36.568 febs [main] INFO  p6spy - 2022-10-15 17:38:36 | 耗时 3 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-10-15 17:38:37.253 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-10-15 17:38:38.620 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-10-15 17:38:38.678 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-10-15 17:38:38.768 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-10-15 17:38:38.777 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-10-15 17:38:38.780 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 17:38:38.791 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-10-15 17:38:38.794 febs [main] INFO  cc.mrbird.febs.StoreApplication - Started StoreApplication in 11.708 seconds (JVM running for 12.618)
2022-10-15 17:38:38.803 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-10-15 17:38:38.804 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-10-15 17:38:38.804 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-10-15 17:38:38.838 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-10-15 17:38:38.846 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 17:38:38.910 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-10-15 17:38:38.922 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-10-15 17:38:38.934 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-10-15 17:38:38.938 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 17:38:38.940 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-10-15 17:38:38.943 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-10-15 17:38:38.945 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-10-15 17:38:38.948 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 17:38:38.950 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-10-15 17:38:38.953 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-10-15 17:38:38.954 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-10-15 17:38:38.956 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'xiaoduan' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 17:38:38.960 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'xiaoduan';
2022-10-15 17:38:38.961 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'xiaoduan' and m.perms is not null and m.perms <> '';
2022-10-15 17:38:38.962 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-10-15 17:38:38.965 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 17:38:38.967 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test';
2022-10-15 17:38:38.969 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test' and m.perms is not null and m.perms <> '';
2022-10-15 17:38:38.970 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16' ;
2022-10-15 17:38:38.972 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'ddmtest14' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 17:38:38.977 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'ddmtest14';
2022-10-15 17:38:38.979 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'ddmtest14' and m.perms is not null and m.perms <> '';
2022-10-15 17:38:38.980 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='33' ;
2022-10-15 17:38:38.982 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 17:38:38.984 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test1';
2022-10-15 17:38:38.986 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test1' and m.perms is not null and m.perms <> '';
2022-10-15 17:38:38.988 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='34' ;
2022-10-15 17:38:38.990 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 17:38:38.992 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-10-15 17:38:38.995 febs [main] INFO  p6spy - 2022-10-15 17:38:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-10-15 17:38:39.001 febs [main] INFO  p6spy - 2022-10-15 17:38:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='35' ;
2022-10-15 17:38:39.004 febs [main] INFO  p6spy - 2022-10-15 17:38:39 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test33333' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 17:38:39.007 febs [main] INFO  p6spy - 2022-10-15 17:38:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test33333';
2022-10-15 17:38:39.009 febs [main] INFO  p6spy - 2022-10-15 17:38:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test33333' and m.perms is not null and m.perms <> '';
2022-10-15 17:38:39.010 febs [main] INFO  p6spy - 2022-10-15 17:38:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='36' ;
2022-10-15 17:38:39.013 febs [main] INFO  p6spy - 2022-10-15 17:38:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 17:38:39.016 febs [main] INFO  p6spy - 2022-10-15 17:38:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system';
2022-10-15 17:38:39.018 febs [main] INFO  p6spy - 2022-10-15 17:38:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'system' and m.perms is not null and m.perms <> '';
2022-10-15 17:38:39.021 febs [main] INFO  p6spy - 2022-10-15 17:38:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='37' ;
2022-10-15 17:38:39.021 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-10-15 17:38:39.021 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-10-15 17:38:39.021 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-10-15 17:38:39.021 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-10-15 17:38:39.021 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2022-10-15T17:38:39.021
2022-10-15 17:38:39.443 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-10-15 17:38:39.444 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-10-15 17:38:39.457 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2022-10-15 17:38:39.498 febs [RMI TCP Connection(1)-192.168.1.5] INFO  p6spy - 2022-10-15 17:38:39 | 耗时 1 ms | SQL 语句：
/* ping */ SELECT 1;
2022-10-15 17:40:12.315 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:40:12.445 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:40:12 | 耗时 15 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:40:12.446 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:40:12 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:40:12.448 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:40:12 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:40:12.450 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:40:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:40:12.455 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:40:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:40:18.028 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:40:18.103 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:40:18 | 耗时 72 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:40:18.105 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:40:18 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:40:18.107 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:40:18 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:40:18.108 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:40:18 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:40:18.112 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:40:18 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:40:33.899 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:40:33.902 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:40:33 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:40:33.904 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:40:33 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:40:33.905 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:40:33 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:40:33.907 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:40:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:40:33.909 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:40:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:40:55.238 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:40:55.241 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:40:55 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:40:55.242 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:40:55 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:40:55.244 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:40:55 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:40:55.245 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:40:55 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:40:55.247 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:40:55 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:41:34.145 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:41:34.149 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 17:41:34 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:41:34.150 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 17:41:34 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:41:34.152 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 17:41:34 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:41:34.153 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 17:41:34 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:41:34.155 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 17:41:34 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:42:17.764 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:42:17.768 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:42:17 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:42:17.769 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:42:17 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:42:17.770 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:42:17 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:42:17.772 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:42:17 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:42:17.774 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 17:42:17 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:42:46.255 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:42:46.258 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:42:46 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:42:46.260 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:42:46 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:42:46.261 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:42:46 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:42:46.262 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:42:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:42:46.264 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 17:42:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:43:40.349 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:43:40.352 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:43:40 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:43:40.354 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:43:40 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:43:40.355 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:43:40 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:43:40.356 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:43:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:43:40.358 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 17:43:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:43:59.318 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:43:59.360 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:43:59 | 耗时 39 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:43:59.361 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:43:59 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:43:59.363 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:43:59 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:43:59.364 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:43:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:43:59.366 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 17:43:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 17:44:12.955 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 17:44:12.960 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 17:44:12 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 17:44:12.962 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 17:44:12 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:44:12.964 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 17:44:12 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 17:44:12.967 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 17:44:12 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 17:44:12.969 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 17:44:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 18:38:38.774 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 19:38:38.777 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 20:28:57.695 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-10-15 20:28:57.769 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:28:57 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-10-15T20:28:57.721+0800' WHERE username = 'system';
2022-10-15 20:28:57.777 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:28:57 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 20:28:57.869 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:28:57 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'system', '2022-10-15T20:28:57.853+0800', '', '127.0.0.1' );
2022-10-15 20:28:57.911 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:28:57.934 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:28:57 | 耗时 4 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system') order by m.order_num;
2022-10-15 20:29:39.366 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:29:39.367 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:29:39.369 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:29:39.387 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:29:39 | 耗时 3 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:29:39.388 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:29:39.390 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:29:39 | 耗时 8 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:29:39.396 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:29:39 | 耗时 12 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:29:39.401 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:29:39 | 耗时 2 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:29:39.402 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:29:39 | 耗时 1 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:29:39.407 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:29:39 | 耗时 17 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:29:39.409 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:29:39 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:29:39.411 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:29:39 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:29:39.413 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:29:39 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:29:39.415 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:29:39 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:29:39.416 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:29:39 | 耗时 5 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:29:39.425 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:29:39 | 耗时 3 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:29:39.430 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:29:39 | 耗时 1 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:38:38.768 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 20:43:27.562 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:43:27.562 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:43:27.570 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:43:27 | 耗时 4 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:43:27.574 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:43:27 | 耗时 2 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:43:27.576 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:43:27.580 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:43:27 | 耗时 13 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:43:27.584 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:43:27 | 耗时 4 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:43:27.584 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:43:27 | 耗时 3 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:43:27.588 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:43:27 | 耗时 1 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:43:27.589 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:43:27.591 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:43:27 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:43:27.594 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:43:27 | 耗时 11 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:43:27.596 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:43:27 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:43:27.598 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:43:27 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:43:27.600 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:43:27 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:43:27.602 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:43:27 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:43:27.604 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:43:27 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:43:51.442 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:43:51.443 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:43:51.443 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:43:51.446 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:43:51 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:43:51.446 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:43:51 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:43:51.448 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:43:51 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:43:51.449 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:43:51 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:43:51.450 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:43:51 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:43:51.451 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:43:51 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:43:51.451 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:43:51 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:43:51.453 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:43:51 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:43:51.463 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:43:51.467 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:43:51 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:43:51.468 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:43:51 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:43:51.470 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:43:51 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:43:51.472 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:43:51 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:43:51.474 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:43:51 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:45:12.691 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:12.691 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:12.694 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:45:12 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:45:12.694 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:45:12 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:45:12.697 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:45:12 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:45:12.698 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:45:12 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:45:12.700 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:45:12 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:45:12.703 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:12.706 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:45:12 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:45:12.708 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:45:12 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:45:12.710 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:45:12 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:45:12.715 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:12.719 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:12 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:45:12.721 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:12 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:45:12.722 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:12 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:45:12.724 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:45:12.726 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:45:29.135 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:29.137 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:45:29 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:45:29.140 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:45:29 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:45:29.144 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:45:29 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:45:29.154 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:29.155 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:29.157 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:45:29 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:45:29.158 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:45:29 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:45:29.158 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:29.160 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:45:29 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:45:29.160 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:45:29 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:45:29.162 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:45:29 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:45:29.165 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:45:29 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:45:29.166 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:45:29 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:45:29.168 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:45:29 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:45:29.170 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:45:29 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:45:29.172 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:45:29 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:45:35.770 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:35.772 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:35 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:45:35.774 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:35 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:45:35.778 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:35 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:45:35.779 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:35.782 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:45:35 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:45:35.786 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:45:35 | 耗时 2 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:45:35.834 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:35.860 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:45:35 | 耗时 19 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:45:35.898 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:45:35 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:45:35.900 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:45:35 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:45:35.906 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:35.917 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:45:35 | 耗时 8 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:45:35.919 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:45:35 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:45:35.920 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:45:35 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:45:35.922 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:45:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:45:35.924 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:45:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:45:41.965 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:41.966 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:41.968 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:41 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:45:41.968 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:45:41 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:45:41.970 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:45:41 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:45:41.971 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:41 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:45:41.971 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:41.971 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:41.973 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:45:41 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:45:41.994 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:45:41 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:45:41.994 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:45:41 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:45:41.996 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:45:41 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:45:41.996 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:45:41 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:45:41.998 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:45:41 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:45:41.998 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:45:41 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:45:41.999 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:45:41 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:45:42.001 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:45:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:45:48.109 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:48.109 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:48.110 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:48.112 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:45:48 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:45:48.112 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:45:48 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:45:48.112 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:45:48 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:45:48.114 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:45:48 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:45:48.114 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:45:48 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:45:48.115 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:45:48 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:45:48.115 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:45:48 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:45:48.118 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:45:48 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:45:48.123 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:45:48.126 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:48 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:45:48.128 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:48 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:45:48.130 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:48 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:45:48.131 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:48 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:45:48.134 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:45:48 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:46:43.456 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:46:43.456 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:46:43.457 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:46:43.459 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:46:43 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:46:43.459 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:46:43 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:46:43.461 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:46:43 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:46:43.462 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:46:43 | 耗时 1 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:46:43.464 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:46:43 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:46:43.466 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:46:43.468 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:46:43 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:46:43.470 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:46:43 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:46:43.471 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:46:43 | 耗时 12 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:46:43.472 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:46:43 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:46:43.473 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:46:43 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:46:43.474 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:46:43 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:46:43.476 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:46:43 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:46:43.478 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:46:43 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:48:06.258 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:48:06.261 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:48:06 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:48:06.264 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:48:06 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:48:06.265 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:48:06.270 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:48:06 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:48:06.270 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:48:06 | 耗时 2 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:48:06.273 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:48:06 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:48:06.274 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:48:06.274 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:48:06.277 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:48:06 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:48:06.277 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:48:06 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:48:06.279 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:48:06 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:48:06.279 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:48:06 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:48:06.281 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:48:06 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:48:06.281 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:48:06 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:48:06.282 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:48:06 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:48:06.285 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:48:06 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:48:49.210 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:48:49.211 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:48:49.212 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:48:49 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:48:49.214 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:48:49.214 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:48:49 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:48:49.215 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:48:49 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:48:49.216 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:48:49 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:48:49.216 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:48:49 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:48:49.217 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:48:49 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:48:49.218 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:48:49 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:48:49.220 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:48:49 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:48:49.227 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:48:49.230 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:48:49 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:48:49.232 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:48:49 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:48:49.234 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:48:49 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:48:49.236 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:48:49 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:48:49.238 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:48:49 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:48:53.592 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:48:53.592 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:48:53.594 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:48:53.594 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:48:53 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:48:53.594 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:48:53 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:48:53.596 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:48:53 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:48:53.597 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:48:53 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:48:53.597 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:48:53 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:48:53.599 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:48:53 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:48:53.599 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:48:53 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:48:53.601 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:48:53 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:48:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:48:53.609 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:48:53 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:48:53.610 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:48:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:48:53.612 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:48:53 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:48:53.614 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:48:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:48:53.616 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:48:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:49:17.618 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:49:17.621 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:49:17 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:49:17.622 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:49:17.623 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:49:17 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:49:17.625 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:49:17 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:49:17.626 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:49:17 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:49:17.627 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:49:17.628 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:49:17 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:49:17.638 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:49:17.641 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:49:17 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:49:17.643 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:49:17 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:49:17.645 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:49:17 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:49:17.704 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:49:17 | 耗时 71 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:49:17.706 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:49:17 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:49:17.707 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:49:17 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:49:17.709 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:49:17 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:49:17.711 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:49:17 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:49:53.145 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:49:53.149 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:49:53 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:49:53.152 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:49:53 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:49:53.157 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:49:53.158 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:49:53.158 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:49:53.162 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:49:53 | 耗时 1 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:49:53.163 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:49:53 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:49:53.164 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:49:53 | 耗时 1 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:49:53.166 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:49:53 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:49:53.166 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:49:53 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:49:53.168 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:49:53 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:49:53.290 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:49:53 | 耗时 129 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:49:53.292 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:49:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:49:53.294 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:49:53 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:49:53.296 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:49:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:49:53.298 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:49:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:49:59.861 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:49:59.864 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:49:59 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:49:59.866 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:49:59 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:49:59.868 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:49:59.868 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:49:59 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:49:59.871 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:49:59 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:49:59.872 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:49:59.874 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:49:59 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:49:59.874 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:49:59 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:49:59.876 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:49:59 | 耗时 1 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:49:59.877 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:49:59.878 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:49:59 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:49:59.924 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:49:59 | 耗时 45 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:49:59.926 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:49:59 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:49:59.928 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:49:59 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:49:59.931 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:49:59 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:49:59.933 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:49:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:50:10.406 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:50:10.406 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:50:10.408 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:50:10.409 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:50:10 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:50:10.409 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:50:10 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:50:10.411 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:50:10 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:50:10.411 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:50:10 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:50:10.412 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:50:10.413 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:50:10 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:50:10.416 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:50:10 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:50:10.418 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:50:10 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:50:10.420 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:50:10 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:50:10.471 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:50:10 | 耗时 59 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:50:10.472 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:50:10 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:50:10.474 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:50:10 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:50:10.476 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:50:10 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:50:10.478 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:50:10 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:51:46.272 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:51:46.275 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:51:46.275 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:51:46.275 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:51:46 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:51:46.277 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:51:46 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:51:46.277 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:51:46 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:51:46.280 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:51:46 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:51:46.282 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:51:46 | 耗时 1 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:51:46.282 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:51:46.284 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:51:46 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:51:46.286 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:51:46 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:51:46.289 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:51:46 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:51:46.297 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:51:46 | 耗时 19 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:51:46.299 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:51:46 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:51:46.300 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:51:46 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:51:46.302 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:51:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:51:46.304 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:51:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:51:54.526 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:51:54.527 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:51:54.529 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:51:54 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:51:54.531 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:51:54 | 耗时 1 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:51:54.533 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:51:54 | 耗时 2 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:51:54.534 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:51:54 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:51:54.536 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:51:54 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:51:54.536 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:51:54.536 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:51:54 | 耗时 1 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:51:54.537 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:51:54.540 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:51:54 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:51:54.542 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:51:54 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:51:54.603 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:51:54 | 耗时 64 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:51:54.604 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:51:54 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:51:54.607 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:51:54 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:51:54.608 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:51:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:51:54.610 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:51:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:52:19.373 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:52:19.374 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:52:19.376 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:52:19 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:52:19.376 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:52:19 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:52:19.378 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:52:19 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:52:19.379 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:52:19 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:52:19.379 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:52:19.381 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:52:19 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:52:19.383 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:52:19 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:52:19.385 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:52:19 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:52:19.386 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:52:19 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:52:19.390 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:52:19.393 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:52:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:52:19.394 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:52:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:52:19.396 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:52:19 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:52:19.398 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:52:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:52:19.400 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:52:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:53:10.235 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:10.238 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:53:10 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:53:10.239 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:10.240 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:53:10 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:53:10.242 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:53:10 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:53:10.243 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:53:10 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:53:10.244 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:53:10 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:53:10.256 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:10.258 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:53:10 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:53:10.259 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:10.260 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:53:10 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:53:10.266 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:53:10 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:53:10.269 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:53:10 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:53:10.271 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:53:10 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:53:10.272 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:53:10 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:53:10.274 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:53:10 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:53:10.276 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:53:10 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:53:24.257 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:24.259 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:53:24 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:53:24.261 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:53:24 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:53:24.264 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:53:24 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:53:24.264 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:24.267 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:53:24 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:53:24.270 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:53:24 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:53:24.274 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:24.277 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:53:24 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:53:24.279 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:53:24 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:53:24.281 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:53:24 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:53:24.286 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:24.290 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:53:24 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:53:24.292 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:53:24 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:53:24.294 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:53:24 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:53:24.295 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:53:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:53:24.297 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:53:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:53:58.070 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:58.072 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:53:58.074 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:58.074 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:53:58.076 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:53:58.077 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:53:58.078 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:53:58.087 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:58.089 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:53:58.090 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:58.091 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:53:58.092 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:53:58.095 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:53:58.096 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:53:58.099 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:53:58.100 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:53:58.102 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:53:58.282 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:58.282 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:58.284 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:53:58.284 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:53:58.286 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:53:58.287 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:53:58.287 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:58.288 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:53:58.290 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:53:58.292 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:53:58.294 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:53:58.296 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:53:58.300 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:53:58.301 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:53:58.303 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:53:58.305 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:53:58.306 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:53:58 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:55:05.227 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:05.227 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:05.229 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:55:05.229 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:55:05.231 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:55:05.232 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:55:05.234 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:55:05.238 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:05.241 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:55:05.245 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:05.245 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:55:05.247 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:55:05.254 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 6 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:55:05.255 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:55:05.257 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:55:05.258 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:55:05.260 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:55:05.717 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:05.717 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:05.719 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:55:05.719 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:55:05.720 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:05.721 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:55:05.721 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:55:05.722 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:55:05.723 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:55:05.724 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:55:05.726 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:55:05.731 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:05.734 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:55:05.735 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:55:05.737 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:55:05.738 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:55:05.740 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:55:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:55:14.803 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:14.803 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:14.807 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:55:14 | 耗时 1 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:55:14.808 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:55:14 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:55:14.810 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:55:14 | 耗时 1 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:55:14.811 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:55:14 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:55:14.814 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:14.816 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:55:14 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:55:14.817 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:14.818 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:55:14 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:55:14.820 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:55:14 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:55:14.827 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:55:14 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:55:14.835 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:55:14 | 耗时 16 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:55:14.837 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:55:14 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:55:14.839 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:55:14 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:55:14.840 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:55:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:55:14.842 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:55:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:55:23.431 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:23.431 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:23.431 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:23.434 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:55:23 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:55:23.434 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:55:23 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:55:23.434 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:55:23 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:55:23.436 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:55:23 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:55:23.436 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:55:23 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:55:23.437 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:55:23 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:55:23.438 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:55:23 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:55:23.438 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:55:23 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:55:23.439 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:55:23.506 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:55:23 | 耗时 64 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:55:23.508 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:55:23 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:55:23.509 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:55:23 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:55:23.510 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:55:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:55:23.512 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:55:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:56:39.236 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:56:39.237 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:56:39.239 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:56:39 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:56:39.239 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:56:39 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:56:39.241 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:56:39 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:56:39.241 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:56:39 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:56:39.243 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 20:56:39 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:56:39.253 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:56:39.255 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:56:39 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:56:39.256 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:56:39 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:56:39.258 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:56:39 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:56:39.263 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:56:39.266 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:56:39 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:56:39.268 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:56:39 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:56:39.269 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:56:39 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:56:39.271 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:56:39 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:56:39.273 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:56:39 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:57:42.233 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:57:42.233 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:57:42.236 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:57:42 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:57:42.236 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:57:42.238 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 20:57:42 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:57:42.239 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:57:42 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:57:42.240 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:57:42 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:57:42.241 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:57:42.243 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:57:42 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:57:42.248 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:57:42 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:57:42.249 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:57:42 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:57:42.252 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 20:57:42 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:57:42.330 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:57:42 | 耗时 94 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:57:42.332 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:57:42 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:57:42.333 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:57:42 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:57:42.335 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:57:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:57:42.338 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 20:57:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 20:58:45.643 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:58:45.646 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:58:45 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:58:45.647 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:58:45 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 20:58:45.650 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 20:58:45 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 20:58:45.654 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:58:45.657 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:58:45 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 20:58:45.659 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 20:58:45 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 20:58:45.664 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:58:45.666 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 20:58:45.667 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:58:45 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 20:58:45.669 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:58:45 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:58:45.669 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:58:45 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 20:58:45.671 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:58:45 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:58:45.671 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 20:58:45 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 20:58:45.672 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:58:45 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 20:58:45.674 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:58:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 20:58:45.676 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 20:58:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:02:55.171 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:02:55.171 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:02:55.173 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:02:55.174 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:02:55 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:02:55.174 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:02:55 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:02:55.175 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:02:55 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:02:55.175 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:02:55 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:02:55.176 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:02:55 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:02:55.177 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:02:55 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:02:55.178 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:02:55 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:02:55.181 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:02:55 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:02:55.181 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:02:55.187 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:02:55 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:02:55.189 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:02:55 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:02:55.191 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:02:55 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:02:55.193 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:02:55 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:02:55.194 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:02:55 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:04:00.364 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:04:00.368 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:04:00.368 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:04:00 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:04:00.371 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:04:00 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:04:00.371 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:04:00 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:04:00.372 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:04:00.372 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:04:00 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:04:00.375 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:04:00 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:04:00.375 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:04:00 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:04:00.377 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:04:00 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:04:00.378 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:04:00 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:04:00.380 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:04:00.386 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:04:00 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:04:00.387 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:04:00 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:04:00.389 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:04:00 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:04:00.390 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:04:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:04:00.392 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:04:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:04:54.016 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:04:54.016 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:04:54.016 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:04:54.018 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:04:54 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:04:54.018 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:04:54 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:04:54.018 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:04:54 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:04:54.020 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:04:54 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:04:54.020 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:04:54 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:04:54.020 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:04:54 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:04:54.021 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:04:54 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:04:54.021 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:04:54 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:04:54.022 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:04:54.025 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:04:54 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:04:54.026 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:04:54 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:04:54.028 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:04:54 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:04:54.029 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:04:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:04:54.031 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:04:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:07:12.530 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:07:12.530 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:07:12.535 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:07:12 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:07:12.537 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:07:12 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:07:12.540 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:07:12 | 耗时 5 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:07:12.543 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:07:12 | 耗时 2 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:07:12.544 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:07:12.547 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:07:12 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:07:12.547 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:07:12 | 耗时 2 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:07:12.549 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:07:12 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:07:12.550 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:07:12 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:07:12.560 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:07:12.564 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:07:12 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:07:12.565 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:07:12 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:07:12.566 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:07:12 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:07:12.567 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:07:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:07:12.569 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:07:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:08:00.172 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:08:00.172 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:08:00.174 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:08:00 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:08:00.174 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:08:00 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:08:00.175 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:08:00.176 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:08:00 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:08:00.176 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:08:00 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:08:00.178 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:08:00 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:08:00.182 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:08:00 | 耗时 5 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:08:00.185 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:08:00.185 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:08:00 | 耗时 2 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:08:00.187 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:08:00 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:08:00.188 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:08:00 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:08:00.190 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:08:00 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:08:00.191 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:08:00 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:08:00.193 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:08:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:08:00.194 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:08:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:08:40.663 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:08:40.664 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:08:40.665 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:08:40 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:08:40.665 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:08:40 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:08:40.667 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:08:40 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:08:40.667 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:08:40 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:08:40.669 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:08:40 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:08:40.670 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:08:40.672 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:08:40 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:08:40.674 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:08:40 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:08:40.676 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:08:40 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:08:40.678 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:08:40.681 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:08:40 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:08:40.682 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:08:40 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:08:40.684 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:08:40 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:08:40.685 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:08:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:08:40.687 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:08:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:09:05.172 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:09:05.175 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:09:05.176 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:09:05 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:09:05.208 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:09:05 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:09:05.208 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:09:05 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:09:05.211 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:09:05 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:09:05.214 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:09:05.215 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:09:05 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:09:05.217 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:09:05 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:09:05.218 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:09:05.219 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:09:05 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:09:05.220 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:09:05 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:09:05.222 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:09:05 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:09:05.223 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:09:05 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:09:05.225 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:09:05 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:09:05.226 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:09:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:09:05.228 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:09:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:10:01.189 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:10:01.190 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:10:01.192 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:10:01 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:10:01.192 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:10:01 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:10:01.192 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:10:01.195 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:10:01 | 耗时 1 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:10:01.197 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:10:01 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:10:01.198 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:10:01 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:10:01.201 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:10:01 | 耗时 1 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:10:01.201 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:10:01.203 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:10:01 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:10:01.205 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:10:01 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:10:01.206 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:10:01 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:10:01.208 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:10:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:10:01.210 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:10:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:10:01.222 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:10:01 | 耗时 19 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:10:01.224 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:10:01 | 耗时 1 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:10:32.655 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:10:32.655 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:10:32.657 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:10:32 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:10:32.657 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:10:32.657 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:10:32 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:10:32.659 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:10:32 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:10:32.659 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:10:32 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:10:32.660 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:10:32 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:10:32.660 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:10:32 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:10:32.661 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:10:32 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:10:32.662 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:10:32 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:10:32.671 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:10:32.675 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:10:32 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:10:32.676 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:10:32 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:10:32.677 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:10:32 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:10:32.679 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:10:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:10:32.681 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:10:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:10:57.499 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:10:57.500 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:10:57.501 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:10:57.501 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:10:57 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:10:57.501 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:10:57 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:10:57.502 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:10:57 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:10:57.502 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:10:57 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:10:57.503 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:10:57 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:10:57.504 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:10:57 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:10:57.504 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:10:57 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:10:57.505 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:10:57 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:10:57.512 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:10:57.517 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:10:57 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:10:57.518 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:10:57 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:10:57.519 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:10:57 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:10:57.521 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:10:57 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:10:57.523 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:10:57 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:12:45.001 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:12:45.002 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:12:45.004 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:12:45 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:12:45.005 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:12:45 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:12:45.005 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:12:45.006 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:12:45 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:12:45.006 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:12:45 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:12:45.008 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:12:45 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:12:45.008 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:12:45 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:12:45.010 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:12:45 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:12:45.012 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:12:45 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:12:45.016 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:12:45.023 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:12:45 | 耗时 5 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:12:45.025 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:12:45 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:12:45.026 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:12:45 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:12:45.028 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:12:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:12:45.029 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:12:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:13:24.720 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:13:24.720 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:13:24.722 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:13:24 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:13:24.722 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:13:24 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:13:24.722 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:13:24.723 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:13:24 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:13:24.723 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:13:24 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:13:24.724 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:13:24 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:13:24.725 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:13:24 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:13:24.725 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:13:24 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:13:24.727 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:13:24 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:13:24.734 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:13:24.737 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:13:24 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:13:24.739 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:13:24 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:13:24.740 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:13:24 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:13:24.742 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:13:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:13:24.744 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:13:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:14:37.673 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:14:37.690 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:14:37 | 耗时 4 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 21:14:37.699 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:14:37.804 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:14:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storehouse_info si WHERE si.transaction_type = 0;
2022-10-15 21:14:37.812 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:14:37 | 耗时 2 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice, si.inbound_order_number AS inboundOrderNumber, si.delivery_order_number AS deliveryOrderNumber FROM storehouse_info si WHERE si.transaction_type = 0 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 21:14:39.023 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:14:39.037 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:14:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 21:14:39.038 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:14:39 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 21:15:20.366 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:15:20.372 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:15:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 21:15:20.374 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:15:20 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 21:15:22.783 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:15:22.784 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:15:22.786 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:15:22 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 21:15:22.787 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:15:22 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storehouse_info si WHERE si.transaction_type = 0;
2022-10-15 21:15:22.789 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:15:22 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice, si.inbound_order_number AS inboundOrderNumber, si.delivery_order_number AS deliveryOrderNumber FROM storehouse_info si WHERE si.transaction_type = 0 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 21:15:38.786 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:15:38.994 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:15:38 | 耗时 2 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE material_name IN ('西部数据蓝盘 1TB','希捷BarraCuda 2TB','AOC 27G2') AND transaction_type = 0;
2022-10-15 21:15:39.030 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:15:39 | 耗时 2 ms | SQL 语句：
INSERT INTO out_stock_record ( code, handler_code, custodian_code, create_date, remark ) VALUES ( 'OUT-1665839738788', 'STAFF-1663768504015', 'STAFF-1663768504015', '2022-10-15 21:15:38', '特性啊发发' );
2022-10-15 21:15:39.119 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:15:39.123 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:15:39 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storehouse_info si WHERE si.transaction_type = 0;
2022-10-15 21:15:39.126 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:15:39 | 耗时 1 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice, si.inbound_order_number AS inboundOrderNumber, si.delivery_order_number AS deliveryOrderNumber FROM storehouse_info si WHERE si.transaction_type = 0 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 21:15:41.923 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:15:41.931 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:15:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 21:15:41.932 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:15:41 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 21:15:46.029 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:15:46.029 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:15:46.031 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:15:46 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:15:46.031 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:15:46 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:15:46.033 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:15:46.033 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:15:46 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:15:46.033 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:15:46 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:15:46.035 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:15:46 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:15:46.036 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:15:46 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:15:46.038 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:15:46 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:15:46.039 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:15:46 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.delivery_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:15:46.040 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:15:46.050 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:15:46 | 耗时 7 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:15:46.051 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:15:46 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:15:46.053 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:15:46 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:15:46.055 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:15:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:15:46.057 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:15:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:19:26.780 febs [Thread-27] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-10-15 21:19:26.793 febs [Thread-27] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-10-15 21:19:26.794 febs [Thread-27] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-10-15 21:19:26.794 febs [Thread-27] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665826716503 shutting down.
2022-10-15 21:19:26.795 febs [Thread-27] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665826716503 paused.
2022-10-15 21:19:26.796 febs [Thread-27] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665826716503 shutdown complete.
2022-10-15 21:19:26.800 febs [Thread-27] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-10-15 21:19:26.800 febs [Thread-27] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-10-15 21:19:26.804 febs [Thread-27] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-10-15 21:19:32.234 febs [main] INFO  cc.mrbird.febs.StoreApplication - Starting StoreApplication on WIN-ETS2DEK9JHC with PID 16520 (started by Administrator in E:\Project\超商成本核算管理系统\store_cost\backend)
2022-10-15 21:19:32.238 febs [main] INFO  cc.mrbird.febs.StoreApplication - No active profile set, falling back to default profiles: default
2022-10-15 21:19:33.151 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-10-15 21:19:33.153 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-10-15 21:19:33.203 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39ms. Found 0 repository interfaces.
2022-10-15 21:19:33.516 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$c46e0866] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:33.628 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:33.708 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9ebd540a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:33.716 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:33.719 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:33.729 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$352ee339] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:33.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$a0aee4e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:34.182 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$99739c36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:34.200 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:34.203 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:34.288 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:34.294 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$86b63f48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:34.298 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:34.303 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$72f74fd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:34.312 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:34.314 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:34.320 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-10-15 21:19:34.330 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-10-15 21:19:34.536 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-10-15 21:19:34.537 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-10-15 21:19:34.537 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-10-15 21:19:34.537 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-10-15 21:19:34.537 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:34.548 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:34.555 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.176 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.182 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.184 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.186 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.210 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.224 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.225 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.227 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.261 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.279 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.301 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.302 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.324 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.325 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.350 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.354 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.372 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$90c262ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.397 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$430f24e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$fe260ad2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.406 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.409 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.418 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$24f18200] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.425 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.431 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$72ce0059] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.442 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.443 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.450 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.453 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.470 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.483 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.486 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.487 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.493 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.506 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:19:35.881 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-10-15 21:19:35.895 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-10-15 21:19:35.899 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-10-15 21:19:35.899 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-10-15 21:19:35.905 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\办公软件\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-10-15 21:19:36.059 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-10-15 21:19:36.059 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3786 ms
2022-10-15 21:19:36.691 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-10-15 21:19:36.692 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-10-15 21:19:36.692 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-10-15 21:19:36.692 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-10-15 21:19:36.692 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-10-15 21:19:36.692 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-10-15 21:19:36.692 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-10-15 21:19:36.692 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-10-15 21:19:37.226 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-10-15 21:19:37.237 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-10-15 21:19:37.237 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-10-15 21:19:37.240 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-10-15 21:19:37.241 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-10-15 21:19:37.242 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1665839977228'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-10-15 21:19:37.242 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-10-15 21:19:37.242 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-10-15 21:19:37.243 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@25435731
2022-10-15 21:19:37.298 febs [main] INFO  p6spy - 2022-10-15 21:19:37 | 耗时 8 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-10-15 21:19:38.029 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-10-15 21:19:39.351 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-10-15 21:19:39.417 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-10-15 21:19:39.530 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-10-15 21:19:39.540 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-10-15 21:19:39.541 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 21:19:39.555 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-10-15 21:19:39.557 febs [main] INFO  cc.mrbird.febs.StoreApplication - Started StoreApplication in 7.975 seconds (JVM running for 8.929)
2022-10-15 21:19:39.569 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-10-15 21:19:39.570 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-10-15 21:19:39.570 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-10-15 21:19:39.604 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-10-15 21:19:39.612 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:19:39.670 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-10-15 21:19:39.685 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-10-15 21:19:39.693 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-10-15 21:19:39.697 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:19:39.699 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-10-15 21:19:39.701 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-10-15 21:19:39.703 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-10-15 21:19:39.705 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:19:39.707 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-10-15 21:19:39.710 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-10-15 21:19:39.711 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-10-15 21:19:39.713 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'xiaoduan' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:19:39.716 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'xiaoduan';
2022-10-15 21:19:39.717 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'xiaoduan' and m.perms is not null and m.perms <> '';
2022-10-15 21:19:39.719 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-10-15 21:19:39.720 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:19:39.723 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test';
2022-10-15 21:19:39.724 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test' and m.perms is not null and m.perms <> '';
2022-10-15 21:19:39.726 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16' ;
2022-10-15 21:19:39.728 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'ddmtest14' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:19:39.732 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'ddmtest14';
2022-10-15 21:19:39.733 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'ddmtest14' and m.perms is not null and m.perms <> '';
2022-10-15 21:19:39.735 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='33' ;
2022-10-15 21:19:39.737 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:19:39.739 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test1';
2022-10-15 21:19:39.740 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test1' and m.perms is not null and m.perms <> '';
2022-10-15 21:19:39.742 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='34' ;
2022-10-15 21:19:39.743 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:19:39.746 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-10-15 21:19:39.748 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-10-15 21:19:39.754 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='35' ;
2022-10-15 21:19:39.756 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test33333' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:19:39.759 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test33333';
2022-10-15 21:19:39.760 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test33333' and m.perms is not null and m.perms <> '';
2022-10-15 21:19:39.762 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='36' ;
2022-10-15 21:19:39.764 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:19:39.766 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system';
2022-10-15 21:19:39.769 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'system' and m.perms is not null and m.perms <> '';
2022-10-15 21:19:39.771 febs [main] INFO  p6spy - 2022-10-15 21:19:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='37' ;
2022-10-15 21:19:39.771 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-10-15 21:19:39.772 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-10-15 21:19:39.772 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-10-15 21:19:39.772 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-10-15 21:19:39.772 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2022-10-15T21:19:39.772
2022-10-15 21:19:40.471 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-10-15 21:19:40.471 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-10-15 21:19:40.483 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-10-15 21:19:40.484 febs [RMI TCP Connection(1)-192.168.1.5] INFO  p6spy - 2022-10-15 21:19:40 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-10-15 21:19:53.265 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:19:53.265 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:19:53.265 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:19:53.266 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:19:53.321 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:19:53 | 耗时 5 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:19:53.323 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:19:53 | 耗时 7 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:19:53.323 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:19:53 | 耗时 8 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:19:53.326 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:19:53 | 耗时 1 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:19:53.332 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:19:53 | 耗时 2 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:19:53.337 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:19:53 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:19:53.367 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:19:53 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:19:53.368 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:19:53 | 耗时 1 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:19:53.666 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:19:53 | 耗时 215 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:19:53.668 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:19:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:19:53.669 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:19:53 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:19:53.672 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:19:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:19:53.674 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:19:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:20:21.171 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:20:21.231 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:20:21 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 21:20:21.235 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:20:21 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 21:21:54.950 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:21:54.953 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:21:54 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:21:54.956 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:21:54 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:21:54.959 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:21:54.959 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:21:54 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:21:54.965 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:21:54 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:21:54.968 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:21:54 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:21:54.969 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:21:54.972 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:21:54.972 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:21:54 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:21:54.975 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:21:54 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:21:54.977 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:21:54 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:21:55.069 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:21:55 | 耗时 94 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:21:55.070 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:21:55 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:21:55.072 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:21:55 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:21:55.074 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:21:55 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:21:55.076 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:21:55 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:22:32.202 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:22:32.203 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:22:32.203 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:22:32.205 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:22:32 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:22:32.205 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:22:32 | 耗时 0 ms | SQL 语句：
select date_format(l.create_time, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.code where date_sub(curdate(), interval 7 day) <= date(oi.create_time) ) as l where 1 = 1 group by days;
2022-10-15 21:22:32.205 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:22:32 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:22:32.207 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:22:32 | 耗时 1 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.code where date_sub(curdate(), interval 7 day) <= date(osr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:22:32.207 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:22:32 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:22:32.208 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:22:32 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:22:32.209 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:22:32 | 耗时 0 ms | SQL 语句：
select date_format(l.create_date, '%m-%d') days, sum(l.quantity) AS quantity, sum(l.totalPrice) AS totalPrice from ( select sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice from storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.code where date_sub(curdate(), interval 7 day) <= date(sr.create_date) ) as l where 1 = 1 group by days;
2022-10-15 21:22:32.210 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:22:32 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:22:32.219 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:22:32.222 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:22:32 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:22:32.224 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:22:32 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:22:32.225 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:22:32 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:22:32.239 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:22:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:22:32.242 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:22:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:42:24.785 febs [Thread-20] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-10-15 21:42:24.797 febs [Thread-20] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-10-15 21:42:24.798 febs [Thread-20] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-10-15 21:42:24.798 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665839977228 shutting down.
2022-10-15 21:42:24.798 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665839977228 paused.
2022-10-15 21:42:24.799 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665839977228 shutdown complete.
2022-10-15 21:42:24.804 febs [Thread-20] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-10-15 21:42:24.805 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-10-15 21:42:24.809 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-10-15 21:42:28.620 febs [main] INFO  cc.mrbird.febs.StoreApplication - Starting StoreApplication on WIN-ETS2DEK9JHC with PID 7636 (started by Administrator in E:\Project\超商成本核算管理系统\store_cost\backend)
2022-10-15 21:42:28.622 febs [main] INFO  cc.mrbird.febs.StoreApplication - No active profile set, falling back to default profiles: default
2022-10-15 21:42:29.807 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-10-15 21:42:29.809 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-10-15 21:42:29.860 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40ms. Found 0 repository interfaces.
2022-10-15 21:42:30.201 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$2bfc57ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.312 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$64ba3a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.399 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.402 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.412 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9cbd32d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.427 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$83d347b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.796 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$101ebcf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.814 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.818 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.910 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.917 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$ee448ee1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.921 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.927 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$da859f6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.936 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.939 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:30.942 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-10-15 21:42:30.949 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-10-15 21:42:31.118 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-10-15 21:42:31.118 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-10-15 21:42:31.119 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-10-15 21:42:31.119 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-10-15 21:42:31.119 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.130 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.137 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.717 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.723 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.726 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.758 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.762 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.769 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.770 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.771 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.807 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.826 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.848 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.849 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.851 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.871 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.872 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.896 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.897 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.900 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.918 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.936 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$f850b263] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.939 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$aa9d747c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.943 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$65b45a6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.948 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.950 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.956 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$8c7fd199] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.962 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.964 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$da5c4ff2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.975 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.977 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.982 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:31.984 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:32.004 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:32.019 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:32.024 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:32.025 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:32.031 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:32.045 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-15 21:42:32.333 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-10-15 21:42:32.344 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-10-15 21:42:32.348 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-10-15 21:42:32.348 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-10-15 21:42:32.354 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\办公软件\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-10-15 21:42:32.485 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-10-15 21:42:32.485 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3767 ms
2022-10-15 21:42:33.068 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-10-15 21:42:33.069 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-10-15 21:42:33.069 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-10-15 21:42:33.069 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-10-15 21:42:33.069 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-10-15 21:42:33.069 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-10-15 21:42:33.069 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-10-15 21:42:33.069 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-10-15 21:42:33.562 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-10-15 21:42:33.573 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-10-15 21:42:33.573 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-10-15 21:42:33.576 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-10-15 21:42:33.578 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-10-15 21:42:33.579 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1665841353563'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-10-15 21:42:33.579 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-10-15 21:42:33.579 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-10-15 21:42:33.580 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@581e8969
2022-10-15 21:42:33.630 febs [main] INFO  p6spy - 2022-10-15 21:42:33 | 耗时 6 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-10-15 21:42:34.357 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-10-15 21:42:35.614 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-10-15 21:42:35.674 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-10-15 21:42:35.767 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-10-15 21:42:35.779 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-10-15 21:42:35.781 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 21:42:35.796 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-10-15 21:42:35.798 febs [main] INFO  cc.mrbird.febs.StoreApplication - Started StoreApplication in 7.747 seconds (JVM running for 8.69)
2022-10-15 21:42:35.809 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-10-15 21:42:35.810 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-10-15 21:42:35.810 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-10-15 21:42:35.849 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-10-15 21:42:35.858 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:42:35.929 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-10-15 21:42:35.943 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-10-15 21:42:35.952 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-10-15 21:42:35.956 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:42:35.960 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-10-15 21:42:35.962 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-10-15 21:42:35.965 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-10-15 21:42:35.967 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:42:35.969 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-10-15 21:42:35.973 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-10-15 21:42:35.974 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-10-15 21:42:35.977 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'xiaoduan' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:42:35.980 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'xiaoduan';
2022-10-15 21:42:35.982 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'xiaoduan' and m.perms is not null and m.perms <> '';
2022-10-15 21:42:35.983 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-10-15 21:42:35.985 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:42:35.987 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test';
2022-10-15 21:42:35.989 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test' and m.perms is not null and m.perms <> '';
2022-10-15 21:42:35.991 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16' ;
2022-10-15 21:42:35.993 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'ddmtest14' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:42:35.998 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'ddmtest14';
2022-10-15 21:42:35.999 febs [main] INFO  p6spy - 2022-10-15 21:42:35 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'ddmtest14' and m.perms is not null and m.perms <> '';
2022-10-15 21:42:36.001 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='33' ;
2022-10-15 21:42:36.003 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:42:36.005 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test1';
2022-10-15 21:42:36.008 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test1' and m.perms is not null and m.perms <> '';
2022-10-15 21:42:36.009 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='34' ;
2022-10-15 21:42:36.012 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:42:36.014 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-10-15 21:42:36.016 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-10-15 21:42:36.022 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='35' ;
2022-10-15 21:42:36.025 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test33333' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:42:36.027 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test33333';
2022-10-15 21:42:36.029 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test33333' and m.perms is not null and m.perms <> '';
2022-10-15 21:42:36.031 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='36' ;
2022-10-15 21:42:36.033 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:42:36.035 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system';
2022-10-15 21:42:36.039 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'system' and m.perms is not null and m.perms <> '';
2022-10-15 21:42:36.041 febs [main] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='37' ;
2022-10-15 21:42:36.042 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-10-15 21:42:36.042 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-10-15 21:42:36.043 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-10-15 21:42:36.043 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-10-15 21:42:36.043 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2022-10-15T21:42:36.043
2022-10-15 21:42:36.520 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-10-15 21:42:36.520 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-10-15 21:42:36.535 febs [RMI TCP Connection(1)-192.168.1.5] INFO  p6spy - 2022-10-15 21:42:36 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-10-15 21:42:36.534 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2022-10-15 21:43:18.834 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-10-15 21:43:18.949 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:43:18 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-10-15T21:43:18.924+0800' WHERE username = 'system';
2022-10-15 21:43:18.951 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:43:18 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:43:18.981 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:43:18 | 耗时 7 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'system', '2022-10-15T21:43:18.966+0800', '', '127.0.0.1' );
2022-10-15 21:43:19.093 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:43:19.119 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system') order by m.order_num;
2022-10-15 21:43:19.413 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:43:19.423 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:43:19.423 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:43:19.426 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:43:19.426 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:43:19.427 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:43:19.430 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:43:19.435 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:43:19.435 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 1 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:43:19.438 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:43:19.449 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:43:19.450 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:43:19.503 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 51 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:43:19.505 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:43:19.507 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:43:19.509 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:43:19.512 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:43:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:44:00.169 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:44:00.169 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:44:00.171 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:44:00.173 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:44:00 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:44:00.173 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:44:00 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:44:00.174 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:44:00 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:44:00.175 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:44:00 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:44:00.177 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:44:00 | 耗时 1 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:44:00.177 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:44:00 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:44:00.177 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:44:00 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:44:00.179 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:44:00 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:44:00.205 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:44:00.208 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:44:00 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:44:00.210 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:44:00 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:44:00.211 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:44:00 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:44:00.213 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:44:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:44:00.222 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:44:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:44:23.779 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:44:23.781 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:44:23 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:44:23.783 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:44:23 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:44:23.785 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:44:23 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:44:23.799 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:44:23.801 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:44:23 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:44:23.804 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:44:23 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:44:23.820 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:44:23.823 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:44:23 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:44:23.825 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:44:23 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:44:23.828 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:44:23 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:44:23.837 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:44:23.841 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:44:23 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:44:23.843 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:44:23 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:44:23.844 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:44:23 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:44:23.846 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:44:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:44:23.848 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:44:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:44:28.128 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:44:28.131 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:44:28 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:44:28.133 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:44:28 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:44:28.135 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:44:28 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:44:28.149 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:44:28.149 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:44:28.151 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:44:28.151 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:44:28 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:44:28.152 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:44:28 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:44:28.153 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:44:28 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:44:28.154 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:44:28 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:44:28.155 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:44:28 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:44:28.161 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:44:28 | 耗时 7 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:44:28.163 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:44:28 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:44:28.164 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:44:28 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:44:28.166 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:44:28 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:44:28.168 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:44:28 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:45:32.943 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:45:32.943 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:45:32.946 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:45:32 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:45:32.946 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:45:32 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:45:32.948 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:45:32 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:45:32.948 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:45:32 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:45:32.950 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:45:32 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:45:32.961 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:45:32.962 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:45:32.964 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:45:32 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:45:32.965 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:45:32 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:45:32.966 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:45:32 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:45:32.967 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:45:32 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:45:32.968 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:45:32 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:45:32.968 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:45:32 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:45:32.970 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:45:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:45:32.975 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:45:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:46:32.895 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:46:32.895 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:46:32.897 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:46:32 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:46:32.897 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:46:32 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:46:32.899 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:46:32 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:46:32.900 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:46:32 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:46:32.902 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:46:32 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:46:32.906 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:46:32.909 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:46:32 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:46:32.911 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:46:32 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:46:32.912 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:46:32.913 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:46:32 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:46:32.916 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:46:32 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:46:32.917 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:46:32 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:46:32.919 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:46:32 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:46:32.921 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:46:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:46:32.922 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:46:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:48:36.059 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:48:36.059 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:48:36.062 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:48:36 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:48:36.062 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:48:36 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:48:36.064 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:48:36 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:48:36.065 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:48:36 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:48:36.065 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:48:36.066 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:48:36 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:48:36.068 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:48:36 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:48:36.070 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:48:36 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:48:36.072 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:48:36 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:48:36.078 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:48:36.082 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:48:36 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:48:36.083 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:48:36 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:48:36.085 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:48:36 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:48:36.087 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:48:36 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:48:36.088 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:48:36 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:48:46.752 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:48:46.752 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:48:46.755 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:48:46 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:48:46.755 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:48:46 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:48:46.757 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:48:46 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:48:46.758 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:48:46 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:48:46.760 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:48:46 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:48:46.770 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:48:46.773 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:48:46 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:48:46.775 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:48:46.775 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:48:46 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:48:46.777 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:48:46 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:48:46.779 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:48:46 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:48:46.780 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:48:46 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:48:46.782 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:48:46 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:48:46.783 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:48:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:48:46.785 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:48:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:49:48.282 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:49:48.282 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:49:48.285 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:49:48 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:49:48.285 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:49:48 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:49:48.287 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:49:48 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:49:48.287 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:49:48 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:49:48.289 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:49:48 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:49:48.312 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:49:48.315 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:49:48 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:49:48.317 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:49:48 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:49:48.319 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:49:48 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:49:48.330 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:49:48.345 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:49:48 | 耗时 13 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:49:48.347 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:49:48 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:49:48.348 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:49:48 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:49:48.350 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:49:48 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:49:48.352 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:49:48 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:49:52.886 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:49:52.886 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:49:52.888 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:49:52.889 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:49:52 | 耗时 1 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:49:52.890 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:49:52 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:49:52.891 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:49:52 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:49:52.891 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:49:52 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:49:52.893 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:49:52 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:49:52.893 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:49:52 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:49:52.893 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:49:52 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:49:52.895 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:49:52 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:49:52.901 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:49:52.904 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:49:52 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:49:52.905 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:49:52 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:49:52.907 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:49:52 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:49:52.908 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:49:52 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:49:52.910 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:49:52 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:52:51.642 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:52:51.699 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:52:51 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM supplier_info si WHERE 1 = 1;
2022-10-15 21:52:51.704 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:52:51 | 耗时 1 ms | SQL 语句：
SELECT si.id, si.purchase_type AS purchaseType, si.supplier_name AS supplierName, si.remark, si.create_date AS createDate FROM supplier_info si WHERE 1 = 1 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 21:52:53.903 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:52:53.914 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:52:53 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 21:52:53.916 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:52:53 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 21:52:54.743 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:52:54.753 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:52:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 21:52:54.754 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:52:54 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 21:52:55.404 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:52:55.422 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:52:55 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM salary_gain sg LEFT JOIN staff_info si ON si.staff_code = sg.staff_code WHERE 1 = 1;
2022-10-15 21:52:55.423 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:52:55 | 耗时 0 ms | SQL 语句：
SELECT sg.id, sg.staff_code AS staffCode, sg.salary, sg.current_flag AS currentFlag, sg.create_date AS createDate, sg.type, sg.remark, si.staff_name AS staffName, si.avatar, si.staff_type AS staffType FROM salary_gain sg LEFT JOIN staff_info si ON si.staff_code = sg.staff_code WHERE 1 = 1 ORDER BY sg.create_date DESC LIMIT 0,10;
2022-10-15 21:52:56.806 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:52:56.808 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:52:56.812 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:52:56 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 21:52:56.828 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:52:56 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storehouse_info si WHERE si.transaction_type = 0;
2022-10-15 21:52:56.829 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:52:56 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice, si.inbound_order_number AS inboundOrderNumber, si.delivery_order_number AS deliveryOrderNumber FROM storehouse_info si WHERE si.transaction_type = 0 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 21:52:57.536 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:52:57.550 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:52:57 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1;
2022-10-15 21:52:57.552 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:52:57 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.task_date AS taskDate, ri.content, ri.status, ri.replenishment, ri.staff_code, si.staff_name AS staffName, si.avatar FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1 ORDER BY ri.task_date DESC LIMIT 0,10;
2022-10-15 21:52:58.961 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:52:58.966 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:52:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM supplier_info si WHERE 1 = 1;
2022-10-15 21:52:58.967 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:52:58 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.purchase_type AS purchaseType, si.supplier_name AS supplierName, si.remark, si.create_date AS createDate FROM supplier_info si WHERE 1 = 1 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 21:52:59.891 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:52:59.894 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:52:59 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:52:59.894 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:52:59.895 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:52:59 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:52:59.897 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:52:59 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:52:59.898 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:52:59 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:52:59.900 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:52:59 | 耗时 1 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:52:59.907 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:52:59.907 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:52:59.910 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:52:59 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:52:59.911 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:52:59 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:52:59.913 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:52:59 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:52:59.926 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:52:59 | 耗时 17 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:52:59.927 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:52:59 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:52:59.929 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:52:59 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:52:59.930 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:52:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:52:59.933 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:52:59 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:53:07.800 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:53:07.801 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:53:07.802 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:53:07.803 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:53:07.804 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:53:07 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:53:07.804 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:53:07 | 耗时 1 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:53:07.805 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:53:07 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:53:07.806 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:53:07 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:53:07.806 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:53:07 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:53:07.806 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:53:07 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:53:07.808 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:53:07 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:53:07.808 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:53:07 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:53:07.834 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:53:07 | 耗时 28 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:53:07.836 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:53:07 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:53:07.837 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:53:07 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:53:07.838 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:53:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:53:07.840 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:53:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:53:33.327 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-10-15 21:53:33.333 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-10-15T21:53:33.329+0800' WHERE username = 'system';
2022-10-15 21:53:33.336 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:53:33.350 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'system', '2022-10-15T21:53:33.346+0800', '', '127.0.0.1' );
2022-10-15 21:53:33.381 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:53:33.384 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system') order by m.order_num;
2022-10-15 21:53:33.622 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:53:33.625 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:53:33.627 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:53:33.631 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:53:33.634 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:53:33.636 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:53:33.638 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:53:33.642 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:53:33.645 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:53:33.647 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:53:33.651 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 2 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:53:33.653 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:53:33.734 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 79 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:53:33.735 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:53:33.737 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:53:33.739 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:53:33.741 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:53:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:54:32.440 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-10-15 21:54:32.452 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 8 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-10-15T21:54:32.442+0800' WHERE username = 'system';
2022-10-15 21:54:32.456 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'system' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-10-15 21:54:32.469 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'system', '2022-10-15T21:54:32.464+0800', '', '127.0.0.1' );
2022-10-15 21:54:32.491 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:54:32.498 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 4 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'system') order by m.order_num;
2022-10-15 21:54:32.697 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:54:32.697 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:54:32.700 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 1 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:54:32.703 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 1 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:54:32.704 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:54:32.704 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:54:32.706 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 1 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:54:32.707 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:54:32.709 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:54:32.710 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:54:32.710 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:54:32.711 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 12 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:54:32.712 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:54:32.712 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:54:32.713 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:54:32.713 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:54:32.716 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:54:32 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:54:45.849 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:54:45.855 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:54:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM supplier_info si WHERE 1 = 1;
2022-10-15 21:54:45.856 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:54:45 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.purchase_type AS purchaseType, si.supplier_name AS supplierName, si.remark, si.create_date AS createDate FROM supplier_info si WHERE 1 = 1 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 21:54:51.550 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:54:51.558 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:54:51 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 21:54:51.559 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:54:51 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 21:54:57.579 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:54:57.582 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:54:57 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665809407227' ORDER BY si.create_date DESC;
2022-10-15 21:55:03.756 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:55:03.761 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:55:03 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 21:55:03.762 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:55:03 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 21:55:07.819 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:55:07.822 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:55:07 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 and osr.code = 'OUT-1664866843062' ORDER BY si.create_date DESC;
2022-10-15 21:55:14.492 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:55:14.497 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:55:14 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 21:55:14.498 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:55:14 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 21:55:18.775 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:55:18.778 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:55:18 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 and sr.code = 'IN-1664712933659' ORDER BY si.create_date DESC;
2022-10-15 21:55:22.482 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:55:22.482 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:55:22.485 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:55:22 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 21:55:22.486 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:55:22 | 耗时 0 ms | SQL 语句：
SELECT id,supplier_name,create_date,remark,purchase_type FROM supplier_info;
2022-10-15 21:55:32.525 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:55:32.532 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:55:32 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE transaction_type = 0 AND material_name LIKE '%a%' limit 8;
2022-10-15 21:55:43.502 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:55:43.513 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:55:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM staff_info si WHERE 1 = 1;
2022-10-15 21:55:43.514 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:55:43 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.staff_code AS staffCode, si.staff_name AS staffName, si.staff_type AS staffType, si.staff_sex AS staffSex, si.staff_status AS staffStatus, si.avatar, si.on_board_time AS onBoardTime, si.resign_time AS resignTime, si.birth_date AS birthDate, si.remark, si.email FROM staff_info si WHERE 1 = 1 ORDER BY si.resign_time DESC LIMIT 0,10;
2022-10-15 21:55:51.287 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:55:51.294 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:55:51 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,salary,current_flag,create_date,type,remark FROM salary_gain WHERE staff_code = 'STAFF-1664550140461' AND current_flag = 1;
2022-10-15 21:55:58.269 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:55:58.273 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:55:58 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM salary_gain sg LEFT JOIN staff_info si ON si.staff_code = sg.staff_code WHERE 1 = 1;
2022-10-15 21:55:58.275 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:55:58 | 耗时 1 ms | SQL 语句：
SELECT sg.id, sg.staff_code AS staffCode, sg.salary, sg.current_flag AS currentFlag, sg.create_date AS createDate, sg.type, sg.remark, si.staff_name AS staffName, si.avatar, si.staff_type AS staffType FROM salary_gain sg LEFT JOIN staff_info si ON si.staff_code = sg.staff_code WHERE 1 = 1 ORDER BY sg.create_date DESC LIMIT 0,10;
2022-10-15 21:56:02.807 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:56:02.813 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:56:02 | 耗时 2 ms | SQL 语句：
SELECT sg.id, sg.salary, sg.current_flag AS currentFlag, sg.create_date AS createDate, sg.type FROM salary_gain sg WHERE 1 = 1 AND sg.staff_code = 'STAFF-1664550140461' ORDER BY sg.create_date ASC;
2022-10-15 21:56:07.905 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:56:07.907 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:56:07 | 耗时 0 ms | SQL 语句：
SELECT sg.id, sg.salary, sg.current_flag AS currentFlag, sg.create_date AS createDate, sg.type FROM salary_gain sg WHERE 1 = 1 AND sg.staff_code = 'STAFF-1664550140461' ORDER BY sg.create_date ASC;
2022-10-15 21:56:09.916 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:56:09.921 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:56:09 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 21:56:13.195 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:56:13.198 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:56:13 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,salary,current_flag,create_date,type,remark FROM salary_gain WHERE staff_code = 'STAFF-1664550140461' AND current_flag = 1;
2022-10-15 21:56:18.349 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:56:18.361 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:56:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM salary_records sr LEFT JOIN staff_info si ON si.staff_code = sr.staff_code WHERE 1 = 1;
2022-10-15 21:56:18.362 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:56:18 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.staff_code AS staffCode, sr.year, sr.month, sr.income, sr.basic_wage AS basicWage, sr.post_allowance AS postAllowance, sr.performance_bonus AS performanceBonus, sr.overtime_pay AS overtimePay, sr.holiday_costs AS holidayCosts, sr.pension, sr.unemployment, sr.medical_insurance AS medicalInsurance, sr.tax, sr.housing_fund AS housingFund, sr.payroll, sr.create_date AS createDate, sr.remark, si.staff_name AS staffName, si.avatar, si.staff_type AS staffType FROM salary_records sr LEFT JOIN staff_info si ON si.staff_code = sr.staff_code WHERE 1 = 1 ORDER BY sr.year DESC, sr.month DESC, sr.payroll DESC LIMIT 0,10;
2022-10-15 21:56:21.279 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:56:21.284 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:56:21 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_code = 'STAFF-1663768504015';
2022-10-15 21:56:26.973 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:56:26.976 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:56:26 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_code = 'STAFF-1663768504015';
2022-10-15 21:56:34.289 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:56:34.292 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:56:34 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 21:56:34.294 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:56:34.298 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:56:34 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storehouse_info si WHERE si.transaction_type = 0;
2022-10-15 21:56:34.299 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:56:34 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice, si.inbound_order_number AS inboundOrderNumber, si.delivery_order_number AS deliveryOrderNumber FROM storehouse_info si WHERE si.transaction_type = 0 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 21:56:39.095 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:56:39.099 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:56:39 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.inbound_order_number AS orderNumber, sr.create_date AS createDate FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 AND si.transaction_type = 1 AND si.material_name = '西部数据蓝盘 1TB' ORDER BY sr.create_date DESC;
2022-10-15 21:56:39.102 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:56:39 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.delivery_order_number AS orderNumber, osr.create_date AS createDate FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 AND si.transaction_type = 2 AND si.material_name = '西部数据蓝盘 1TB' ORDER BY osr.create_date DESC;
2022-10-15 21:57:02.167 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:57:02.172 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:57:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1;
2022-10-15 21:57:02.173 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:57:02 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.task_date AS taskDate, ri.content, ri.status, ri.replenishment, ri.staff_code, si.staff_name AS staffName, si.avatar FROM replenishment_info ri LEFT JOIN staff_info si ON ri.staff_code = si.staff_code WHERE 1 = 1 ORDER BY ri.task_date DESC LIMIT 0,10;
2022-10-15 21:57:20.761 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:57:20.763 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:57:20 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:57:20.765 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:57:20 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 21:57:20.771 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:57:20.774 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:57:20 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:57:20.775 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:57:20 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:57:20.777 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:57:20 | 耗时 0 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 21:57:20.781 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:57:20.782 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:57:20.784 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:57:20 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 21:57:20.786 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:57:20 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 21:57:20.788 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:57:20 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 21:57:20.806 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:57:20 | 耗时 21 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 21:57:20.807 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:57:20 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:57:20.809 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:57:20 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 21:57:20.810 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:57:20 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 21:57:20.812 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 21:57:20 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 21:58:17.738 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:58:17.742 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:58:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM supplier_info si WHERE 1 = 1;
2022-10-15 21:58:17.744 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:58:17 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.purchase_type AS purchaseType, si.supplier_name AS supplierName, si.remark, si.create_date AS createDate FROM supplier_info si WHERE 1 = 1 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 21:58:20.639 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:58:20.643 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:58:20 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 21:58:20.644 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:58:20 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 21:58:23.773 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:58:23.776 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:58:23 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN order_info oi on oi.code = si.delivery_order_number WHERE 1 = 1 and oi.code = 'ORDER-1665809407227' ORDER BY si.create_date DESC;
2022-10-15 21:58:34.411 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:58:34.416 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:58:34 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 21:58:34.417 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:58:34 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 21:58:36.666 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:58:36.668 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:58:36 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 and osr.code = 'OUT-1664886649542' ORDER BY si.create_date DESC;
2022-10-15 21:58:48.679 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:58:48.684 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:58:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 21:58:48.685 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:58:48 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 21:58:50.092 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:58:50.093 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:58:50.094 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-10-15 21:58:50 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 21:58:50.095 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:58:50 | 耗时 0 ms | SQL 语句：
SELECT id,supplier_name,create_date,remark,purchase_type FROM supplier_info;
2022-10-15 21:58:55.777 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:58:55.779 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-10-15 21:58:55 | 耗时 0 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE transaction_type = 0 AND material_name LIKE '%a%' limit 8;
2022-10-15 21:59:12.888 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:59:12.896 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:59:12 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM staff_info si WHERE 1 = 1;
2022-10-15 21:59:12.897 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 21:59:12 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.staff_code AS staffCode, si.staff_name AS staffName, si.staff_type AS staffType, si.staff_sex AS staffSex, si.staff_status AS staffStatus, si.avatar, si.on_board_time AS onBoardTime, si.resign_time AS resignTime, si.birth_date AS birthDate, si.remark, si.email FROM staff_info si WHERE 1 = 1 ORDER BY si.resign_time DESC LIMIT 0,10;
2022-10-15 21:59:17.593 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:59:17.595 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 21:59:17 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,salary,current_flag,create_date,type,remark FROM salary_gain WHERE staff_code = 'STAFF-1664550140461' AND current_flag = 1;
2022-10-15 21:59:35.474 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:59:35.479 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:59:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM salary_gain sg LEFT JOIN staff_info si ON si.staff_code = sg.staff_code WHERE 1 = 1;
2022-10-15 21:59:35.481 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 21:59:35 | 耗时 1 ms | SQL 语句：
SELECT sg.id, sg.staff_code AS staffCode, sg.salary, sg.current_flag AS currentFlag, sg.create_date AS createDate, sg.type, sg.remark, si.staff_name AS staffName, si.avatar, si.staff_type AS staffType FROM salary_gain sg LEFT JOIN staff_info si ON si.staff_code = sg.staff_code WHERE 1 = 1 ORDER BY sg.create_date DESC LIMIT 0,10;
2022-10-15 21:59:38.588 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:59:38.591 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 21:59:38 | 耗时 0 ms | SQL 语句：
SELECT sg.id, sg.salary, sg.current_flag AS currentFlag, sg.create_date AS createDate, sg.type FROM salary_gain sg WHERE 1 = 1 AND sg.staff_code = 'STAFF-1664550140461' ORDER BY sg.create_date ASC;
2022-10-15 21:59:51.461 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:59:51.464 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 21:59:51 | 耗时 0 ms | SQL 语句：
SELECT sg.id, sg.salary, sg.current_flag AS currentFlag, sg.create_date AS createDate, sg.type FROM salary_gain sg WHERE 1 = 1 AND sg.staff_code = 'STAFF-1664550140461' ORDER BY sg.create_date ASC;
2022-10-15 21:59:52.561 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:59:52.565 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:59:52 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM salary_records sr LEFT JOIN staff_info si ON si.staff_code = sr.staff_code WHERE 1 = 1;
2022-10-15 21:59:52.567 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 21:59:52 | 耗时 1 ms | SQL 语句：
SELECT sr.id, sr.staff_code AS staffCode, sr.year, sr.month, sr.income, sr.basic_wage AS basicWage, sr.post_allowance AS postAllowance, sr.performance_bonus AS performanceBonus, sr.overtime_pay AS overtimePay, sr.holiday_costs AS holidayCosts, sr.pension, sr.unemployment, sr.medical_insurance AS medicalInsurance, sr.tax, sr.housing_fund AS housingFund, sr.payroll, sr.create_date AS createDate, sr.remark, si.staff_name AS staffName, si.avatar, si.staff_type AS staffType FROM salary_records sr LEFT JOIN staff_info si ON si.staff_code = sr.staff_code WHERE 1 = 1 ORDER BY sr.year DESC, sr.month DESC, sr.payroll DESC LIMIT 0,10;
2022-10-15 21:59:55.262 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 21:59:55.265 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 21:59:55 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_code = 'STAFF-1663768504015';
2022-10-15 22:00:06.396 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:00:06.396 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:00:06.398 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 22:00:06 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 22:00:06.400 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 22:00:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storehouse_info si WHERE si.transaction_type = 0;
2022-10-15 22:00:06.401 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 22:00:06 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice, si.inbound_order_number AS inboundOrderNumber, si.delivery_order_number AS deliveryOrderNumber FROM storehouse_info si WHERE si.transaction_type = 0 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 22:00:18.657 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:00:18.660 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 22:00:18 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.inbound_order_number AS orderNumber, sr.create_date AS createDate FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 AND si.transaction_type = 1 AND si.material_name = 'AOC 27G2' ORDER BY sr.create_date DESC;
2022-10-15 22:00:18.662 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 22:00:18 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.delivery_order_number AS orderNumber, osr.create_date AS createDate FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 AND si.transaction_type = 2 AND si.material_name = 'AOC 27G2' ORDER BY osr.create_date DESC;
2022-10-15 22:00:25.525 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:00:25.527 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 22:00:25 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.inbound_order_number AS orderNumber, sr.create_date AS createDate FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 AND si.transaction_type = 1 AND si.material_name = 'Cherry MX3.0S Wireless机械键盘' ORDER BY sr.create_date DESC;
2022-10-15 22:00:25.529 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 22:00:25 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.delivery_order_number AS orderNumber, osr.create_date AS createDate FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 AND si.transaction_type = 2 AND si.material_name = 'Cherry MX3.0S Wireless机械键盘' ORDER BY osr.create_date DESC;
2022-10-15 22:00:29.161 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:00:29.164 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 22:00:29 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.inbound_order_number AS orderNumber, sr.create_date AS createDate FROM storehouse_info si LEFT JOIN storage_record sr on sr.code = si.inbound_order_number WHERE 1 = 1 AND si.transaction_type = 1 AND si.material_name = 'Cherry MX3.0S Wireless机械键盘' ORDER BY sr.create_date DESC;
2022-10-15 22:00:29.165 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 22:00:29 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.measurement_unit AS measurementUnit, si.model, si.material_type AS materialType, si.unit_price AS unitPrice, si.quantity, si.delivery_order_number AS orderNumber, osr.create_date AS createDate FROM storehouse_info si LEFT JOIN out_stock_record osr on osr.code = si.delivery_order_number WHERE 1 = 1 AND si.transaction_type = 2 AND si.material_name = 'Cherry MX3.0S Wireless机械键盘' ORDER BY osr.create_date DESC;
2022-10-15 22:27:42.583 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:27:42.583 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:27:42.584 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:27:42.594 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 22:27:42 | 耗时 1 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 22:27:42.596 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 22:27:42 | 耗时 1 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark FROM storage_record sr WHERE 1 = 1 AND YEAR(sr.create_date) = '2022' AND MONTH(sr.create_date) = '10';
2022-10-15 22:27:42.599 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:27:42.599 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 22:27:42 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,year,month,income,basic_wage,post_allowance,performance_bonus,overtime_pay,holiday_costs,pension,unemployment,medical_insurance,tax,housing_fund,payroll,create_date,remark FROM salary_records WHERE year = '2022' AND month = '10';
2022-10-15 22:27:42.604 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 22:27:42 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime FROM order_info oi WHERE 1 = 1 AND YEAR(oi.create_time) = '2022' AND MONTH(oi.create_time) = '10';
2022-10-15 22:27:42.609 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-10-15 22:27:42 | 耗时 1 ms | SQL 语句：
SELECT id,material_name,material_type,measurement_unit,quantity,transaction_type,create_date,remark,model,unit_price,inbound_order_number,delivery_order_number FROM storehouse_info WHERE delivery_order_number IN ('ORDER-1665051571055','ORDER-1665104249027','ORDER-1665809407227');
2022-10-15 22:27:42.614 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 22:27:42 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT oi.create_time, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM order_info oi LEFT JOIN storehouse_info si ON si.delivery_order_number = oi.CODE ) AS l ON ( DATE_FORMAT( l.create_time, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 22:27:42.618 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 22:27:42 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT osr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM out_stock_record osr LEFT JOIN storehouse_info si ON si.delivery_order_number = osr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 22:27:42.621 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 22:27:42 | 耗时 1 ms | SQL 语句：
SELECT date_format( spo.days, '%m-%d' ) days, sum( l.quantity ) AS quantity, sum( l.totalPrice ) AS totalPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) ) AS spo LEFT JOIN ( SELECT sr.create_date, si.material_type, si.quantity, si.unit_price * si.quantity AS totalPrice FROM storage_record sr LEFT JOIN storehouse_info si ON si.inbound_order_number = sr.CODE ) AS l ON ( DATE_FORMAT( l.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days;
2022-10-15 22:27:42.638 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 22:27:42 | 耗时 19 ms | SQL 语句：
select count(1) from t_login_log;
2022-10-15 22:27:42.641 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 22:27:42 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-10-15 22:27:42.643 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 22:27:42 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-10-15 22:27:42.645 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 22:27:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-10-15 22:27:42.647 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 22:27:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2022-10-15 22:28:36.221 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:28:36.229 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 22:28:36 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM supplier_info si WHERE 1 = 1;
2022-10-15 22:28:36.230 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-10-15 22:28:36 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.purchase_type AS purchaseType, si.supplier_name AS supplierName, si.remark, si.create_date AS createDate FROM supplier_info si WHERE 1 = 1 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 22:28:47.115 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:28:47.119 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 22:28:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1;
2022-10-15 22:28:47.120 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 22:28:47 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.code , oi.remark , oi.total_price AS totalPrice , oi.handler_code AS handlerCode, oi.create_time AS createTime, si.staff_name AS handlerName, si.avatar AS handlerAvatar FROM order_info oi LEFT JOIN staff_info si ON oi.handler_code = si.staff_code WHERE 1 = 1 LIMIT 0,10;
2022-10-15 22:28:56.426 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:28:56.430 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 22:28:56 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM out_stock_record osr LEFT JOIN staff_info si1 ON osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON osr.custodian_code = si2.staff_code WHERE 1 = 1;
2022-10-15 22:28:56.432 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-10-15 22:28:56 | 耗时 0 ms | SQL 语句：
SELECT osr.id, osr.code, osr.handler_code AS handlerCode, osr.custodian_code AS custodianCode, osr.create_date AS createDate, osr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar FROM out_stock_record osr LEFT JOIN staff_info si1 on osr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on osr.custodian_code = si2.staff_code WHERE 1 = 1 ORDER BY osr.create_date DESC LIMIT 0,10;
2022-10-15 22:29:30.843 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:29:30.849 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 22:29:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storage_record sr LEFT JOIN staff_info si1 ON sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 ON sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si ON sr.supplier_id = si.id WHERE 1 = 1;
2022-10-15 22:29:30.851 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 22:29:30 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.code, sr.supplier_id AS supplierId, sr.handler_code AS handlerCode, sr.custodian_code AS custodianCode, sr.total_price AS totalPrice, sr.create_date AS createDate, sr.remark, si1.staff_name AS handlerName, si2.staff_name AS custodianName, si1.avatar AS handlerAvatar, si2.avatar AS custodianAvatar, si.supplier_name AS supplierName FROM storage_record sr LEFT JOIN staff_info si1 on sr.handler_code = si1.staff_code LEFT JOIN staff_info si2 on sr.custodian_code = si2.staff_code LEFT JOIN supplier_info si on sr.supplier_id = si.id WHERE 1 = 1 ORDER BY sr.create_date DESC LIMIT 0,10;
2022-10-15 22:29:55.143 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:29:55.149 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 22:29:55 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM staff_info si WHERE 1 = 1;
2022-10-15 22:29:55.151 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-10-15 22:29:55 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.staff_code AS staffCode, si.staff_name AS staffName, si.staff_type AS staffType, si.staff_sex AS staffSex, si.staff_status AS staffStatus, si.avatar, si.on_board_time AS onBoardTime, si.resign_time AS resignTime, si.birth_date AS birthDate, si.remark, si.email FROM staff_info si WHERE 1 = 1 ORDER BY si.resign_time DESC LIMIT 0,10;
2022-10-15 22:30:27.892 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:30:27.897 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 22:30:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM salary_gain sg LEFT JOIN staff_info si ON si.staff_code = sg.staff_code WHERE 1 = 1;
2022-10-15 22:30:27.899 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-10-15 22:30:27 | 耗时 0 ms | SQL 语句：
SELECT sg.id, sg.staff_code AS staffCode, sg.salary, sg.current_flag AS currentFlag, sg.create_date AS createDate, sg.type, sg.remark, si.staff_name AS staffName, si.avatar, si.staff_type AS staffType FROM salary_gain sg LEFT JOIN staff_info si ON si.staff_code = sg.staff_code WHERE 1 = 1 ORDER BY sg.create_date DESC LIMIT 0,10;
2022-10-15 22:30:53.080 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:30:53.085 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 22:30:53 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM salary_records sr LEFT JOIN staff_info si ON si.staff_code = sr.staff_code WHERE 1 = 1;
2022-10-15 22:30:53.086 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-10-15 22:30:53 | 耗时 0 ms | SQL 语句：
SELECT sr.id, sr.staff_code AS staffCode, sr.year, sr.month, sr.income, sr.basic_wage AS basicWage, sr.post_allowance AS postAllowance, sr.performance_bonus AS performanceBonus, sr.overtime_pay AS overtimePay, sr.holiday_costs AS holidayCosts, sr.pension, sr.unemployment, sr.medical_insurance AS medicalInsurance, sr.tax, sr.housing_fund AS housingFund, sr.payroll, sr.create_date AS createDate, sr.remark, si.staff_name AS staffName, si.avatar, si.staff_type AS staffType FROM salary_records sr LEFT JOIN staff_info si ON si.staff_code = sr.staff_code WHERE 1 = 1 ORDER BY sr.year DESC, sr.month DESC, sr.payroll DESC LIMIT 0,10;
2022-10-15 22:31:00.996 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:31:00.997 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-10-15 22:31:01.001 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-10-15 22:31:01 | 耗时 0 ms | SQL 语句：
SELECT id,staff_code,staff_name,staff_type,staff_sex,staff_status,avatar,on_board_time,resign_time,birth_date,remark,email FROM staff_info WHERE staff_status = 1;
2022-10-15 22:31:01.001 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 22:31:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM storehouse_info si WHERE si.transaction_type = 0;
2022-10-15 22:31:01.003 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-10-15 22:31:01 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.material_name AS materialName, si.material_type AS materialType, si.measurement_unit AS measurementUnit, si.quantity, si.transaction_type AS transactionType, si.create_date AS createDate, si.remark, si.model, si.unit_price AS unitPrice, si.inbound_order_number AS inboundOrderNumber, si.delivery_order_number AS deliveryOrderNumber FROM storehouse_info si WHERE si.transaction_type = 0 ORDER BY si.create_date DESC LIMIT 0,10;
2022-10-15 22:42:35.775 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-10-15 22:53:56.395 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-10-15 22:53:56.408 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-10-15 22:53:56.408 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-10-15 22:53:56.408 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665841353563 shutting down.
2022-10-15 22:53:56.409 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665841353563 paused.
2022-10-15 22:53:56.410 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1665841353563 shutdown complete.
2022-10-15 22:53:56.416 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-10-15 22:53:56.417 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-10-15 22:53:56.423 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
